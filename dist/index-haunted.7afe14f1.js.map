{"version":3,"sources":["../src/lib/directive.ts","../src/lib/dom.ts","../src/lib/part.ts","../src/lib/template.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/default-template-processor.ts","../src/lib/template-factory.ts","../src/lib/render.ts","src/lit-html.ts","node_modules/haunted/index.js","src/storeHook.js","src/reducer.js","src/index-haunted.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["symbolFor","Symbol","for","str","phaseSymbol","hookSymbol","updateSymbol","commitSymbol","effectsSymbol","contextSymbol","contextEvent","current","currentId","setCurrent","element","clear","notify","id","defer","Promise","resolve","then","bind","scheduler","tasks","runTasks","t","i","len","length","task","push","read","write","Container","constructor","renderer","frag","host","Map","_updateQueued","update","result","handlePhase","phase","arg","commit","render","runEffects","args","apply","call","symbol","effects","effect","teardown","hooks","forEach","hook","toCamelCase","val","indexOf","toLowerCase","split","reduce","out","part","charAt","toUpperCase","slice","component","BaseElement","HTMLElement","useShadowDOM","shadowRootInit","Element","observedAttributes","_container","attachShadow","mode","shadowRoot","connectedCallback","disconnectedCallback","attributeChangedCallback","name","_","newValue","Reflect","set","reflectiveProp","initialValue","value","Object","freeze","enumerable","configurable","get","proto","Proxy","prototype","target","key","receiver","desc","writable","defineProperty","setPrototypeOf","Hook","el","use","useMemo","fn","values","hasChanged","some","useCallback","inputs","setEffects","cb","useEffect","callback","lastValues","run","_teardown","useState","updater","makeArgs","updaterFn","previousValue","useReducer","initialState","dispatch","state","reducer","action","partToContainer","WeakMap","containerToPart","DirectiveContainer","virtual","setValue","delete","withHooks","factory","cont","teardownOnRemove","includes","Array","node","startNode","parentNode","mo","MutationObserver","mutations","mutation","removedNodes","disconnect","ShadowRoot","addedNodes","nextSibling","observe","childList","setContexts","consumer","useContext","_updater","Context","Error","_subscribe","detail","dispatchEvent","CustomEvent","bubbles","cancelable","composed","unsubscribe","defaultValue","_unsubscribe","createContext","Provider","listeners","eventHandler","event","index","splice","stopPropagation","addEventListener","removeEventListener","_value","Consumer","render$$1","context","stores","subscriptions","defaultReducer","payload","StoreInterface","store","setState","getState","subscribe","console","warn","getStoreByIdentifier","identifier","createStore","setters","setter","type","subscription","public","assign","getStoreByName","e","useStore","filter","actions","isArray","subsriberExists","keys","find","appState","todoListStore","elementOne","html","elementTwo","customElements","define","App","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","hmrApply","v","hmrAcceptRun","window","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","concat","Function","deps","cached","cache"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;AAoBA,MAAM,UAAU,GAAG,IAAI,OAAJ,EAAnB;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCO,MAAM,SAAS,GAAgC,CAA7B,IACpB,CAAC,GAAG,IAAJ,KAAuB;AACtB,QAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAJ,CAAX;AACA,EAAA,UAAU,CAAC,GAAX,CAAe,CAAf,EAAkB,IAAlB;AACA,SAAO,CAAP;AACD,CALE;;;;AAOA,MAAM,WAAW,GAAI,CAAD,IAAiC;AAC1D,SAAO,OAAO,CAAP,KAAa,UAAb,IAA2B,UAAU,CAAC,GAAX,CAAe,CAAf,CAAlC;AACD,CAFM;;;;;;;;;;;AC1EP;;;;;;;;;;;;;;AAsBA;;;AAGO,MAAM,YAAY,GAAG,MAAM,CAAC,cAAP,KAA0B,SAA1B,IACvB,MAAM,CAAC,cAAP,CAA4C,yBAA5C,KACG,SAFD;AAIP;;;;;;;;AAKO,MAAM,aAAa,GACtB,CAAC,SAAD,EACC,KADD,EAEC,GAAA,GAAiB,IAFlB,EAGC,MAAA,GAAoB,IAHrB,KAGmC;AACjC,SAAO,KAAK,KAAK,GAAjB,EAAsB;AACpB,UAAM,CAAC,GAAG,KAAM,CAAC,WAAjB;AACA,IAAA,SAAS,CAAC,YAAV,CAAuB,KAAvB,EAA+B,MAA/B;AACA,IAAA,KAAK,GAAG,CAAR;AACD;AACF,CAVE;AAYP;;;;;;;;AAIO,MAAM,WAAW,GACpB,CAAC,SAAD,EAAkB,KAAlB,EAAoC,GAAA,GAAiB,IAArD,KAAmE;AACjE,SAAO,KAAK,KAAK,GAAjB,EAAsB;AACpB,UAAM,CAAC,GAAG,KAAM,CAAC,WAAjB;AACA,IAAA,SAAS,CAAC,WAAV,CAAsB,KAAtB;AACA,IAAA,KAAK,GAAG,CAAR;AACD;AACF,CAPE;;;;;;;;;;;AClDP;;;;;;;;;;;;;;AA4CA;;;;AAIO,MAAM,QAAQ,GAAG,EAAjB;AAEP;;;;;AAGO,MAAM,OAAO,GAAG,EAAhB;;;;;;;;;;ACrDP;;;;;;;;;;;;;;AAoBA;;;;AAIO,MAAM,MAAM,GAAG,SAAS,MAAM,CAAC,IAAI,CAAC,MAAL,EAAD,CAAN,CAAsB,KAAtB,CAA4B,CAA5B,CAA8B,IAAtD;AAEP;;;;;;AAIO,MAAM,UAAU,GAAG,OAAO,MAAM,KAAhC;;AAEA,MAAM,WAAW,GAAG,IAAI,MAAJ,CAAW,GAAG,MAAM,IAAI,UAAU,EAAlC,CAApB;AAEP;;;;;AAGO,MAAM,oBAAoB,GAAG,OAA7B;AAEP;;;;;;AAGM,MAAO,QAAP,CAAe;AAInB,EAAA,WAAA,CAAY,MAAZ,EAAoC,OAApC,EAAgE;AAHvD,SAAA,KAAA,GAAwB,EAAxB;AAIP,SAAK,OAAL,GAAe,OAAf;AAEA,UAAM,aAAa,GAAW,EAA9B;AACA,UAAM,KAAK,GAAW,EAAtB,CAJ8D,CAK9D;;AACA,UAAM,MAAM,GAAG,QAAQ,CAAC,gBAAT,CACX,OAAO,CAAC,OADG,EAEX;AAAI;AAFO,MAGX,IAHW,EAIX,KAJW,CAAf,CAN8D,CAW9D;AACA;AACA;;AACA,QAAI,aAAa,GAAG,CAApB;AACA,QAAI,KAAK,GAAG,CAAC,CAAb;AACA,QAAI,SAAS,GAAG,CAAhB;AACA,UAAM;AAAC,MAAA,OAAD;AAAU,MAAA,MAAM,EAAE;AAAC,QAAA;AAAD;AAAlB,QAA8B,MAApC;;AACA,WAAO,SAAS,GAAG,MAAnB,EAA2B;AACzB,YAAM,IAAI,GAAG,MAAM,CAAC,QAAP,EAAb;;AACA,UAAI,IAAI,KAAK,IAAb,EAAmB;AACjB;AACA;AACA;AACA;AACA,QAAA,MAAM,CAAC,WAAP,GAAqB,KAAK,CAAC,GAAN,EAArB;AACA;AACD;;AACD,MAAA,KAAK;;AAEL,UAAI,IAAI,CAAC,QAAL,KAAkB;AAAE;AAAxB,QAAiD;AAC/C,cAAK,IAAgB,CAAC,aAAjB,EAAL,EAAuC;AACrC,kBAAM,UAAU,GAAI,IAAgB,CAAC,UAArC;AACA,kBAAM;AAAC,cAAA;AAAD,gBAAW,UAAjB,CAFqC,CAGrC;AACA;AACA;AACA;AACA;;AACA,gBAAI,KAAK,GAAG,CAAZ;;AACA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,EAA7B,EAAiC;AAC/B,kBAAI,QAAQ,CAAC,UAAU,CAAC,CAAD,CAAV,CAAc,IAAf,EAAqB,oBAArB,CAAZ,EAAwD;AACtD,gBAAA,KAAK;AACN;AACF;;AACD,mBAAO,KAAK,KAAK,CAAjB,EAAoB;AAClB;AACA;AACA,oBAAM,aAAa,GAAG,OAAO,CAAC,SAAD,CAA7B,CAHkB,CAIlB;;AACA,oBAAM,IAAI,GAAG,sBAAsB,CAAC,IAAvB,CAA4B,aAA5B,EAA4C,CAA5C,CAAb,CALkB,CAMlB;AACA;AACA;AACA;AACA;;AACA,oBAAM,mBAAmB,GACrB,IAAI,CAAC,WAAL,KAAqB,oBADzB;AAEA,oBAAM,cAAc,GACf,IAAgB,CAAC,YAAjB,CAA8B,mBAA9B,CADL;AAEC,cAAA,IAAgB,CAAC,eAAjB,CAAiC,mBAAjC;AACD,oBAAM,OAAO,GAAG,cAAc,CAAC,KAAf,CAAqB,WAArB,CAAhB;AACA,mBAAK,KAAL,CAAW,IAAX,CAAgB;AAAC,gBAAA,IAAI,EAAE,WAAP;AAAoB,gBAAA,KAApB;AAA2B,gBAAA,IAA3B;AAAiC,gBAAA,OAAO,EAAE;AAA1C,eAAhB;AACA,cAAA,SAAS,IAAI,OAAO,CAAC,MAAR,GAAiB,CAA9B;AACD;AACF;;AACD,cAAK,IAAgB,CAAC,OAAjB,KAA6B,UAAlC,EAA8C;AAC5C,YAAA,KAAK,CAAC,IAAN,CAAW,IAAX;AACA,YAAA,MAAM,CAAC,WAAP,GAAsB,IAA4B,CAAC,OAAnD;AACD;AACF,SAxCD,MAwCO,IAAI,IAAI,CAAC,QAAL,KAAkB;AAAE;AAAxB,QAA8C;AACnD,gBAAM,IAAI,GAAI,IAAa,CAAC,IAA5B;;AACA,cAAI,IAAI,CAAC,OAAL,CAAa,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,kBAAM,MAAM,GAAG,IAAI,CAAC,UAApB;AACA,kBAAM,OAAO,GAAG,IAAI,CAAC,KAAL,CAAW,WAAX,CAAhB;AACA,kBAAM,SAAS,GAAG,OAAO,CAAC,MAAR,GAAiB,CAAnC,CAH6B,CAI7B;AACA;;AACA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAApB,EAA+B,CAAC,EAAhC,EAAoC;AAClC,kBAAI,MAAJ;AACA,kBAAI,CAAC,GAAG,OAAO,CAAC,CAAD,CAAf;;AACA,kBAAI,CAAC,KAAK,EAAV,EAAc;AACZ,gBAAA,MAAM,GAAG,YAAY,EAArB;AACD,eAFD,MAEO;AACL,sBAAM,KAAK,GAAG,sBAAsB,CAAC,IAAvB,CAA4B,CAA5B,CAAd;;AACA,oBAAI,KAAK,KAAK,IAAV,IAAkB,QAAQ,CAAC,KAAK,CAAC,CAAD,CAAN,EAAW,oBAAX,CAA9B,EAAgE;AAC9D,kBAAA,CAAC,GAAG,CAAC,CAAC,KAAF,CAAQ,CAAR,EAAW,KAAK,CAAC,KAAjB,IAA0B,KAAK,CAAC,CAAD,CAA/B,GACA,KAAK,CAAC,CAAD,CAAL,CAAS,KAAT,CAAe,CAAf,EAAkB,CAAC,oBAAoB,CAAC,MAAxC,CADA,GACkD,KAAK,CAAC,CAAD,CAD3D;AAED;;AACD,gBAAA,MAAM,GAAG,QAAQ,CAAC,cAAT,CAAwB,CAAxB,CAAT;AACD;;AACD,cAAA,MAAM,CAAC,YAAP,CAAoB,MAApB,EAA4B,IAA5B;AACA,mBAAK,KAAL,CAAW,IAAX,CAAgB;AAAC,gBAAA,IAAI,EAAE,MAAP;AAAe,gBAAA,KAAK,EAAE,EAAE;AAAxB,eAAhB;AACD,aArB4B,CAsB7B;AACA;;;AACA,gBAAI,OAAO,CAAC,SAAD,CAAP,KAAuB,EAA3B,EAA+B;AAC7B,cAAA,MAAM,CAAC,YAAP,CAAoB,YAAY,EAAhC,EAAoC,IAApC;AACA,cAAA,aAAa,CAAC,IAAd,CAAmB,IAAnB;AACD,aAHD,MAGO;AACJ,cAAA,IAAa,CAAC,IAAd,GAAqB,OAAO,CAAC,SAAD,CAA5B;AACF,aA7B4B,CA8B7B;;;AACA,YAAA,SAAS,IAAI,SAAb;AACD;AACF,SAnCM,MAmCA,IAAI,IAAI,CAAC,QAAL,KAAkB;AAAE;AAAxB,QAAiD;AACtD,cAAK,IAAgB,CAAC,IAAjB,KAA0B,MAA/B,EAAuC;AACrC,kBAAM,MAAM,GAAG,IAAI,CAAC,UAApB,CADqC,CAErC;AACA;AACA;AACA;;AACA,gBAAI,IAAI,CAAC,eAAL,KAAyB,IAAzB,IAAiC,KAAK,KAAK,aAA/C,EAA8D;AAC5D,cAAA,KAAK;AACL,cAAA,MAAM,CAAC,YAAP,CAAoB,YAAY,EAAhC,EAAoC,IAApC;AACD;;AACD,YAAA,aAAa,GAAG,KAAhB;AACA,iBAAK,KAAL,CAAW,IAAX,CAAgB;AAAC,cAAA,IAAI,EAAE,MAAP;AAAe,cAAA;AAAf,aAAhB,EAXqC,CAYrC;AACA;;AACA,gBAAI,IAAI,CAAC,WAAL,KAAqB,IAAzB,EAA+B;AAC5B,cAAA,IAAgB,CAAC,IAAjB,GAAwB,EAAxB;AACF,aAFD,MAEO;AACL,cAAA,aAAa,CAAC,IAAd,CAAmB,IAAnB;AACA,cAAA,KAAK;AACN;;AACD,YAAA,SAAS;AACV,WArBD,MAqBO;AACL,gBAAI,CAAC,GAAG,CAAC,CAAT;;AACA,mBAAO,CAAC,CAAC,GAAI,IAAgB,CAAC,IAAjB,CAAsB,OAAtB,CAA8B,MAA9B,EAAsC,CAAC,GAAG,CAA1C,CAAN,MAAwD,CAAC,CAAhE,EAAmE;AACjE;AACA;AACA;AACA;AACA,mBAAK,KAAL,CAAW,IAAX,CAAgB;AAAC,gBAAA,IAAI,EAAE,MAAP;AAAe,gBAAA,KAAK,EAAE,CAAC;AAAvB,eAAhB;AACA,cAAA,SAAS;AACV;AACF;AACF;AACF,KA3I6D,CA6I9D;;;AACA,SAAK,MAAM,CAAX,IAAgB,aAAhB,EAA+B;AAC7B,MAAA,CAAC,CAAC,UAAF,CAAc,WAAd,CAA0B,CAA1B;AACD;AACF;;AArJkB;;;;AAwJrB,MAAM,QAAQ,GAAG,CAAC,GAAD,EAAc,MAAd,KAAyC;AACxD,QAAM,KAAK,GAAG,GAAG,CAAC,MAAJ,GAAa,MAAM,CAAC,MAAlC;AACA,SAAO,KAAK,IAAI,CAAT,IAAc,GAAG,CAAC,KAAJ,CAAU,KAAV,MAAqB,MAA1C;AACD,CAHD;;AA0BO,MAAM,oBAAoB,GAAI,IAAD,IAAwB,IAAI,CAAC,KAAL,KAAe,CAAC,CAArE,EAEP;AACA;;;;;AACO,MAAM,YAAY,GAAG,MAAM,QAAQ,CAAC,aAAT,CAAuB,EAAvB,CAA3B;AAEP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BO,MAAM,sBAAsB,GAC/B,4IADG;;;;;;;;;;AC1OP;;AAIA;;AAtBA;;;;;;;;;;;;;;AAcA;;;;AAUA;;;;AAIM,MAAO,gBAAP,CAAuB;AAM3B,EAAA,WAAA,CACI,QADJ,EACwB,SADxB,EAEI,OAFJ,EAE0B;AAPT,SAAA,OAAA,GAAiC,EAAjC;AAQf,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,OAAL,GAAe,OAAf;AACD;;AAED,EAAA,MAAM,CAAC,MAAD,EAA+B;AACnC,QAAI,CAAC,GAAG,CAAR;;AACA,SAAK,MAAM,IAAX,IAAmB,KAAK,OAAxB,EAAiC;AAC/B,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,CAAC,QAAL,CAAc,MAAM,CAAC,CAAD,CAApB;AACD;;AACD,MAAA,CAAC;AACF;;AACD,SAAK,MAAM,IAAX,IAAmB,KAAK,OAAxB,EAAiC;AAC/B,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,CAAC,MAAL;AACD;AACF;AACF;;AAED,EAAA,MAAM,GAAA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,UAAM,QAAQ,GAAG,oBACb,KAAK,QAAL,CAAc,OAAd,CAAsB,OAAtB,CAA8B,SAA9B,CAAwC,IAAxC,CADa,GAEb,QAAQ,CAAC,UAAT,CAAoB,KAAK,QAAL,CAAc,OAAd,CAAsB,OAA1C,EAAmD,IAAnD,CAFJ;AAIA,UAAM,KAAK,GAAW,EAAtB;AACA,UAAM,KAAK,GAAG,KAAK,QAAL,CAAc,KAA5B,CA5CI,CA6CJ;;AACA,UAAM,MAAM,GAAG,QAAQ,CAAC,gBAAT,CACX,QADW,EAEX;AAAI;AAFO,MAGX,IAHW,EAIX,KAJW,CAAf;AAKA,QAAI,SAAS,GAAG,CAAhB;AACA,QAAI,SAAS,GAAG,CAAhB;AACA,QAAI,IAAJ;AACA,QAAI,IAAI,GAAG,MAAM,CAAC,QAAP,EAAX,CAtDI,CAuDJ;;AACA,WAAO,SAAS,GAAG,KAAK,CAAC,MAAzB,EAAiC;AAC/B,MAAA,IAAI,GAAG,KAAK,CAAC,SAAD,CAAZ;;AACA,UAAI,CAAC,oCAAqB,IAArB,CAAL,EAAiC;AAC/B,aAAK,OAAL,CAAa,IAAb,CAAkB,SAAlB;;AACA,QAAA,SAAS;AACT;AACD,OAN8B,CAQ/B;AACA;AACA;;;AACA,aAAO,SAAS,GAAG,IAAI,CAAC,KAAxB,EAA+B;AAC7B,QAAA,SAAS;;AACT,YAAI,IAAK,CAAC,QAAN,KAAmB,UAAvB,EAAmC;AACjC,UAAA,KAAK,CAAC,IAAN,CAAW,IAAX;AACA,UAAA,MAAM,CAAC,WAAP,GAAsB,IAA4B,CAAC,OAAnD;AACD;;AACD,YAAI,CAAC,IAAI,GAAG,MAAM,CAAC,QAAP,EAAR,MAA+B,IAAnC,EAAyC;AACvC;AACA;AACA;AACA;AACA,UAAA,MAAM,CAAC,WAAP,GAAqB,KAAK,CAAC,GAAN,EAArB;AACA,UAAA,IAAI,GAAG,MAAM,CAAC,QAAP,EAAP;AACD;AACF,OAzB8B,CA2B/B;;;AACA,UAAI,IAAI,CAAC,IAAL,KAAc,MAAlB,EAA0B;AACxB,cAAM,IAAI,GAAG,KAAK,SAAL,CAAe,oBAAf,CAAoC,KAAK,OAAzC,CAAb;AACA,QAAA,IAAI,CAAC,eAAL,CAAqB,IAAK,CAAC,eAA3B;;AACA,aAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB;AACD,OAJD,MAIO;AACL,aAAK,OAAL,CAAa,IAAb,CAAkB,GAAG,KAAK,SAAL,CAAe,0BAAf,CACjB,IADiB,EACA,IAAI,CAAC,IADL,EACW,IAAI,CAAC,OADhB,EACyB,KAAK,OAD9B,CAArB;AAED;;AACD,MAAA,SAAS;AACV;;AAED,QAAI,iBAAJ,EAAkB;AAChB,MAAA,QAAQ,CAAC,SAAT,CAAmB,QAAnB;AACA,MAAA,cAAc,CAAC,OAAf,CAAuB,QAAvB;AACD;;AACD,WAAO,QAAP;AACD;;AAjI0B;;;;;;;;;;;ACV7B;;AAEA;;AApBA;;;;;;;;;;;;;;AAcA;;;;AAQA;;;;AAIM,MAAO,cAAP,CAAqB;AAMzB,EAAA,WAAA,CACI,OADJ,EACmC,MADnC,EAEI,IAFJ,EAEkB,SAFlB,EAE8C;AAC5C,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,SAAL,GAAiB,SAAjB;AACD;AAED;;;;;AAGA,EAAA,OAAO,GAAA;AACL,UAAM,CAAC,GAAG,KAAK,OAAL,CAAa,MAAb,GAAsB,CAAhC;AACA,QAAI,IAAI,GAAG,EAAX;AACA,QAAI,gBAAgB,GAAG,KAAvB;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,CAAC,EAAxB,EAA4B;AAC1B,YAAM,CAAC,GAAG,KAAK,OAAL,CAAa,CAAb,CAAV,CAD0B,CAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,YAAM,WAAW,GAAG,CAAC,CAAC,WAAF,CAAc,MAAd,CAApB,CAnB0B,CAoB1B;AACA;AACA;;AACA,MAAA,gBAAgB,GAAG,CAAC,WAAW,GAAG,CAAC,CAAf,IAAoB,gBAArB,KACf,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,WAAW,GAAG,CAA/B,MAAsC,CAAC,CAD3C,CAvB0B,CAyB1B;AACA;AACA;;AACA,YAAM,cAAc,GAAG,iCAAuB,IAAvB,CAA4B,CAA5B,CAAvB;;AACA,UAAI,cAAc,KAAK,IAAvB,EAA6B;AAC3B;AACA;AACA;AACA;AACA;AACA,QAAA,IAAI,IAAI,CAAC,IAAI,gBAAgB,GAAG,gBAAH,GAAY,oBAAhC,CAAT;AACD,OAPD,MAOO;AACL;AACA;AACA;AACA,QAAA,IAAI,IAAI,CAAC,CAAC,MAAF,CAAS,CAAT,EAAY,cAAc,CAAC,KAA3B,IAAoC,cAAc,CAAC,CAAD,CAAlD,GACJ,cAAc,CAAC,CAAD,CADV,GACgB,8BADhB,GACuC,cAAc,CAAC,CAAD,CADrD,GAEJ,gBAFJ;AAGD;AACF;;AACD,IAAA,IAAI,IAAI,KAAK,OAAL,CAAa,CAAb,CAAR;AACA,WAAO,IAAP;AACD;;AAED,EAAA,kBAAkB,GAAA;AAChB,UAAM,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAuB,UAAvB,CAAjB;AACA,IAAA,QAAQ,CAAC,SAAT,GAAqB,KAAK,OAAL,EAArB;AACA,WAAO,QAAP;AACD;;AA5EwB;AA+E3B;;;;;;;;;;;AAOM,MAAO,iBAAP,SAAiC,cAAjC,CAA+C;AACnD,EAAA,OAAO,GAAA;AACL,WAAO,QAAQ,MAAM,OAAN,EAAe,QAA9B;AACD;;AAED,EAAA,kBAAkB,GAAA;AAChB,UAAM,QAAQ,GAAG,MAAM,kBAAN,EAAjB;AACA,UAAM,OAAO,GAAG,QAAQ,CAAC,OAAzB;AACA,UAAM,UAAU,GAAG,OAAO,CAAC,UAA3B;AACA,IAAA,OAAO,CAAC,WAAR,CAAoB,UAApB;AACA,4BAAc,OAAd,EAAuB,UAAU,CAAC,UAAlC;AACA,WAAO,QAAP;AACD;;AAZkD;;;;;;;;;;;AC9FrD;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAxBA;;;;;;;;;;;;;;AAcA;;;AAcO,MAAM,WAAW,GAAI,KAAD,IAAuC;AAChE,SACI,KAAK,KAAK,IAAV,IACA,EAAE,OAAO,KAAP,KAAiB,QAAjB,IAA6B,OAAO,KAAP,KAAiB,UAAhD,CAFJ;AAGD,CAJM;;;;AAKA,MAAM,UAAU,GAAI,KAAD,IAA+C;AACvE,SAAO,KAAK,CAAC,OAAN,CAAc,KAAd,KACH;AACA,GAAC,EAAE,KAAK,IAAK,KAAa,CAAC,MAAM,CAAC,QAAR,CAAzB,CAFL;AAGD,CAJM;AAMP;;;;;;;;;AAKM,MAAO,kBAAP,CAAyB;AAO7B,EAAA,WAAA,CAAY,OAAZ,EAA8B,IAA9B,EAA4C,OAA5C,EAA0E;AAF1E,SAAA,KAAA,GAAQ,IAAR;AAGE,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,KAAL,GAAa,EAAb;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAAR,GAAiB,CAArC,EAAwC,CAAC,EAAzC,EAA6C;AAC1C,WAAK,KAAL,CAA+B,CAA/B,IAAoC,KAAK,WAAL,EAApC;AACF;AACF;AAED;;;;;AAGU,EAAA,WAAW,GAAA;AACnB,WAAO,IAAI,aAAJ,CAAkB,IAAlB,CAAP;AACD;;AAES,EAAA,SAAS,GAAA;AACjB,UAAM,OAAO,GAAG,KAAK,OAArB;AACA,UAAM,CAAC,GAAG,OAAO,CAAC,MAAR,GAAiB,CAA3B;AACA,QAAI,IAAI,GAAG,EAAX;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,CAAC,EAAxB,EAA4B;AAC1B,MAAA,IAAI,IAAI,OAAO,CAAC,CAAD,CAAf;AACA,YAAM,IAAI,GAAG,KAAK,KAAL,CAAW,CAAX,CAAb;;AACA,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,cAAM,CAAC,GAAG,IAAI,CAAC,KAAf;;AACA,YAAI,WAAW,CAAC,CAAD,CAAX,IAAkB,CAAC,UAAU,CAAC,CAAD,CAAjC,EAAsC;AACpC,UAAA,IAAI,IAAI,OAAO,CAAP,KAAa,QAAb,GAAwB,CAAxB,GAA4B,MAAM,CAAC,CAAD,CAA1C;AACD,SAFD,MAEO;AACL,eAAK,MAAM,CAAX,IAAgB,CAAhB,EAAmB;AACjB,YAAA,IAAI,IAAI,OAAO,CAAP,KAAa,QAAb,GAAwB,CAAxB,GAA4B,MAAM,CAAC,CAAD,CAA1C;AACD;AACF;AACF;AACF;;AAED,IAAA,IAAI,IAAI,OAAO,CAAC,CAAD,CAAf;AACA,WAAO,IAAP;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,QAAI,KAAK,KAAT,EAAgB;AACd,WAAK,KAAL,GAAa,KAAb;AACA,WAAK,OAAL,CAAa,YAAb,CAA0B,KAAK,IAA/B,EAAqC,KAAK,SAAL,EAArC;AACD;AACF;;AArD4B;AAwD/B;;;;;;;AAGM,MAAO,aAAP,CAAoB;AAIxB,EAAA,WAAA,CAAY,SAAZ,EAAyC;AAFzC,SAAA,KAAA,GAAiB,SAAjB;AAGE,SAAK,SAAL,GAAiB,SAAjB;AACD;;AAED,EAAA,QAAQ,CAAC,KAAD,EAAe;AACrB,QAAI,KAAK,KAAK,cAAV,KAAuB,CAAC,WAAW,CAAC,KAAD,CAAZ,IAAuB,KAAK,KAAK,KAAK,KAA7D,CAAJ,EAAyE;AACvE,WAAK,KAAL,GAAa,KAAb,CADuE,CAEvE;AACA;AACA;;AACA,UAAI,CAAC,4BAAY,KAAZ,CAAL,EAAyB;AACvB,aAAK,SAAL,CAAe,KAAf,GAAuB,IAAvB;AACD;AACF;AACF;;AAED,EAAA,MAAM,GAAA;AACJ,WAAO,4BAAY,KAAK,KAAjB,CAAP,EAAgC;AAC9B,YAAM,SAAS,GAAG,KAAK,KAAvB;AACA,WAAK,KAAL,GAAa,cAAb;AACA,MAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACD,QAAI,KAAK,KAAL,KAAe,cAAnB,EAA6B;AAC3B;AACD;;AACD,SAAK,SAAL,CAAe,MAAf;AACD;;AA9BuB;AAiC1B;;;;;;;;;;;;AAQM,MAAO,QAAP,CAAe;AAOnB,EAAA,WAAA,CAAY,OAAZ,EAAkC;AAHlC,SAAA,KAAA,GAAiB,SAAjB;AACQ,SAAA,cAAA,GAA0B,SAA1B;AAGN,SAAK,OAAL,GAAe,OAAf;AACD;AAED;;;;;;;AAKA,EAAA,UAAU,CAAC,SAAD,EAAgB;AACxB,SAAK,SAAL,GAAiB,SAAS,CAAC,WAAV,CAAsB,6BAAtB,CAAjB;AACA,SAAK,OAAL,GAAe,SAAS,CAAC,WAAV,CAAsB,6BAAtB,CAAf;AACD;AAED;;;;;;;;;AAOA,EAAA,eAAe,CAAC,GAAD,EAAU;AACvB,SAAK,SAAL,GAAiB,GAAjB;AACA,SAAK,OAAL,GAAe,GAAG,CAAC,WAAnB;AACD;AAED;;;;;;;AAKA,EAAA,cAAc,CAAC,IAAD,EAAe;AAC3B,IAAA,IAAI,CAAC,QAAL,CAAc,KAAK,SAAL,GAAiB,6BAA/B;;AACA,IAAA,IAAI,CAAC,QAAL,CAAc,KAAK,OAAL,GAAe,6BAA7B;AACD;AAED;;;;;;;AAKA,EAAA,eAAe,CAAC,GAAD,EAAc;AAC3B,IAAA,GAAG,CAAC,QAAJ,CAAa,KAAK,SAAL,GAAiB,6BAA9B;;AACA,SAAK,OAAL,GAAe,GAAG,CAAC,OAAnB;AACA,IAAA,GAAG,CAAC,OAAJ,GAAc,KAAK,SAAnB;AACD;;AAED,EAAA,QAAQ,CAAC,KAAD,EAAe;AACrB,SAAK,cAAL,GAAsB,KAAtB;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,WAAO,4BAAY,KAAK,cAAjB,CAAP,EAAyC;AACvC,YAAM,SAAS,GAAG,KAAK,cAAvB;AACA,WAAK,cAAL,GAAsB,cAAtB;AACA,MAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACD,UAAM,KAAK,GAAG,KAAK,cAAnB;;AACA,QAAI,KAAK,KAAK,cAAd,EAAwB;AACtB;AACD;;AACD,QAAI,WAAW,CAAC,KAAD,CAAf,EAAwB;AACtB,UAAI,KAAK,KAAK,KAAK,KAAnB,EAA0B;AACxB,aAAK,YAAL,CAAkB,KAAlB;AACD;AACF,KAJD,MAIO,IAAI,KAAK,YAAY,8BAArB,EAAqC;AAC1C,WAAK,sBAAL,CAA4B,KAA5B;AACD,KAFM,MAEA,IAAI,KAAK,YAAY,IAArB,EAA2B;AAChC,WAAK,YAAL,CAAkB,KAAlB;AACD,KAFM,MAEA,IAAI,UAAU,CAAC,KAAD,CAAd,EAAuB;AAC5B,WAAK,gBAAL,CAAsB,KAAtB;AACD,KAFM,MAEA,IAAI,KAAK,KAAK,aAAd,EAAuB;AAC5B,WAAK,KAAL,GAAa,aAAb;AACA,WAAK,KAAL;AACD,KAHM,MAGA;AACL;AACA,WAAK,YAAL,CAAkB,KAAlB;AACD;AACF;;AAEO,EAAA,QAAQ,CAAC,IAAD,EAAW;AACzB,SAAK,OAAL,CAAa,UAAb,CAAyB,YAAzB,CAAsC,IAAtC,EAA4C,KAAK,OAAjD;AACD;;AAEO,EAAA,YAAY,CAAC,KAAD,EAAY;AAC9B,QAAI,KAAK,KAAL,KAAe,KAAnB,EAA0B;AACxB;AACD;;AACD,SAAK,KAAL;;AACA,SAAK,QAAL,CAAc,KAAd;;AACA,SAAK,KAAL,GAAa,KAAb;AACD;;AAEO,EAAA,YAAY,CAAC,KAAD,EAAe;AACjC,UAAM,IAAI,GAAG,KAAK,SAAL,CAAe,WAA5B;AACA,IAAA,KAAK,GAAG,KAAK,IAAI,IAAT,GAAgB,EAAhB,GAAqB,KAA7B;;AACA,QAAI,IAAI,KAAK,KAAK,OAAL,CAAa,eAAtB,IACA,IAAI,CAAC,QAAL,KAAkB;AAAE;AADxB,MAC8C;AAC5C;AACA;AACA;AACC,QAAA,IAAa,CAAC,IAAd,GAAqB,KAArB;AACF,OAND,MAMO;AACL,WAAK,YAAL,CAAkB,QAAQ,CAAC,cAAT,CACd,OAAO,KAAP,KAAiB,QAAjB,GAA4B,KAA5B,GAAoC,MAAM,CAAC,KAAD,CAD5B,CAAlB;AAED;;AACD,SAAK,KAAL,GAAa,KAAb;AACD;;AAEO,EAAA,sBAAsB,CAAC,KAAD,EAAsB;AAClD,UAAM,QAAQ,GAAG,KAAK,OAAL,CAAa,eAAb,CAA6B,KAA7B,CAAjB;;AACA,QAAI,KAAK,KAAL,YAAsB,kCAAtB,IACA,KAAK,KAAL,CAAW,QAAX,KAAwB,QAD5B,EACsC;AACpC,WAAK,KAAL,CAAW,MAAX,CAAkB,KAAK,CAAC,MAAxB;AACD,KAHD,MAGO;AACL;AACA;AACA;AACA;AACA,YAAM,QAAQ,GACV,IAAI,kCAAJ,CAAqB,QAArB,EAA+B,KAAK,CAAC,SAArC,EAAgD,KAAK,OAArD,CADJ;;AAEA,YAAM,QAAQ,GAAG,QAAQ,CAAC,MAAT,EAAjB;;AACA,MAAA,QAAQ,CAAC,MAAT,CAAgB,KAAK,CAAC,MAAtB;;AACA,WAAK,YAAL,CAAkB,QAAlB;;AACA,WAAK,KAAL,GAAa,QAAb;AACD;AACF;;AAEO,EAAA,gBAAgB,CAAC,KAAD,EAAyB;AAC/C;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,QAAI,CAAC,KAAK,CAAC,OAAN,CAAc,KAAK,KAAnB,CAAL,EAAgC;AAC9B,WAAK,KAAL,GAAa,EAAb;AACA,WAAK,KAAL;AACD,KAd8C,CAgB/C;AACA;;;AACA,UAAM,SAAS,GAAG,KAAK,KAAvB;AACA,QAAI,SAAS,GAAG,CAAhB;AACA,QAAI,QAAJ;;AAEA,SAAK,MAAM,IAAX,IAAmB,KAAnB,EAA0B;AACxB;AACA,MAAA,QAAQ,GAAG,SAAS,CAAC,SAAD,CAApB,CAFwB,CAIxB;;AACA,UAAI,QAAQ,KAAK,SAAjB,EAA4B;AAC1B,QAAA,QAAQ,GAAG,IAAI,QAAJ,CAAa,KAAK,OAAlB,CAAX;AACA,QAAA,SAAS,CAAC,IAAV,CAAe,QAAf;;AACA,YAAI,SAAS,KAAK,CAAlB,EAAqB;AACnB,UAAA,QAAQ,CAAC,cAAT,CAAwB,IAAxB;AACD,SAFD,MAEO;AACL,UAAA,QAAQ,CAAC,eAAT,CAAyB,SAAS,CAAC,SAAS,GAAG,CAAb,CAAlC;AACD;AACF;;AACD,MAAA,QAAQ,CAAC,QAAT,CAAkB,IAAlB;AACA,MAAA,QAAQ,CAAC,MAAT;AACA,MAAA,SAAS;AACV;;AAED,QAAI,SAAS,GAAG,SAAS,CAAC,MAA1B,EAAkC;AAChC;AACA,MAAA,SAAS,CAAC,MAAV,GAAmB,SAAnB;AACA,WAAK,KAAL,CAAW,QAAQ,IAAI,QAAQ,CAAC,OAAhC;AACD;AACF;;AAED,EAAA,KAAK,CAAC,SAAA,GAAkB,KAAK,SAAxB,EAAiC;AACpC,0BACI,KAAK,SAAL,CAAe,UADnB,EACgC,SAAS,CAAC,WAD1C,EACwD,KAAK,OAD7D;AAED;;AA1LkB;AA6LrB;;;;;;;;;;;AAOM,MAAO,oBAAP,CAA2B;AAO/B,EAAA,WAAA,CAAY,OAAZ,EAA8B,IAA9B,EAA4C,OAA5C,EAA0E;AAH1E,SAAA,KAAA,GAAiB,SAAjB;AACQ,SAAA,cAAA,GAA0B,SAA1B;;AAGN,QAAI,OAAO,CAAC,MAAR,KAAmB,CAAnB,IAAwB,OAAO,CAAC,CAAD,CAAP,KAAe,EAAvC,IAA6C,OAAO,CAAC,CAAD,CAAP,KAAe,EAAhE,EAAoE;AAClE,YAAM,IAAI,KAAJ,CACF,yDADE,CAAN;AAED;;AACD,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,OAAL,GAAe,OAAf;AACD;;AAED,EAAA,QAAQ,CAAC,KAAD,EAAe;AACrB,SAAK,cAAL,GAAsB,KAAtB;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,WAAO,4BAAY,KAAK,cAAjB,CAAP,EAAyC;AACvC,YAAM,SAAS,GAAG,KAAK,cAAvB;AACA,WAAK,cAAL,GAAsB,cAAtB;AACA,MAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACD,QAAI,KAAK,cAAL,KAAwB,cAA5B,EAAsC;AACpC;AACD;;AACD,UAAM,KAAK,GAAG,CAAC,CAAC,KAAK,cAArB;;AACA,QAAI,KAAK,KAAL,KAAe,KAAnB,EAA0B;AACxB,UAAI,KAAJ,EAAW;AACT,aAAK,OAAL,CAAa,YAAb,CAA0B,KAAK,IAA/B,EAAqC,EAArC;AACD,OAFD,MAEO;AACL,aAAK,OAAL,CAAa,eAAb,CAA6B,KAAK,IAAlC;AACD;;AACD,WAAK,KAAL,GAAa,KAAb;AACD;;AACD,SAAK,cAAL,GAAsB,cAAtB;AACD;;AAxC8B;AA2CjC;;;;;;;;;;;;;AASM,MAAO,iBAAP,SAAiC,kBAAjC,CAAmD;AAGvD,EAAA,WAAA,CAAY,OAAZ,EAA8B,IAA9B,EAA4C,OAA5C,EAA0E;AACxE,UAAM,OAAN,EAAe,IAAf,EAAqB,OAArB;AACA,SAAK,MAAL,GACK,OAAO,CAAC,MAAR,KAAmB,CAAnB,IAAwB,OAAO,CAAC,CAAD,CAAP,KAAe,EAAvC,IAA6C,OAAO,CAAC,CAAD,CAAP,KAAe,EADjE;AAED;;AAES,EAAA,WAAW,GAAA;AACnB,WAAO,IAAI,YAAJ,CAAiB,IAAjB,CAAP;AACD;;AAES,EAAA,SAAS,GAAA;AACjB,QAAI,KAAK,MAAT,EAAiB;AACf,aAAO,KAAK,KAAL,CAAW,CAAX,EAAc,KAArB;AACD;;AACD,WAAO,MAAM,SAAN,EAAP;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,QAAI,KAAK,KAAT,EAAgB;AACd,WAAK,KAAL,GAAa,KAAb,CADc,CAEd;;AACC,WAAK,OAAL,CAAqB,KAAK,IAA1B,IAAkC,KAAK,SAAL,EAAlC;AACF;AACF;;AA1BsD;;;;AA6BnD,MAAO,YAAP,SAA4B,aAA5B,CAAyC,GAE/C;AACA;AACA;AACA;;;;AACA,IAAI,qBAAqB,GAAG,KAA5B;;AAEA,IAAI;AACF,QAAM,OAAO,GAAG;AACd,QAAI,OAAJ,GAAW;AACT,MAAA,qBAAqB,GAAG,IAAxB;AACA,aAAO,KAAP;AACD;;AAJa,GAAhB,CADE,CAOF;;AACA,EAAA,MAAM,CAAC,gBAAP,CAAwB,MAAxB,EAAgC,OAAhC,EAAgD,OAAhD,EARE,CASF;;AACA,EAAA,MAAM,CAAC,mBAAP,CAA2B,MAA3B,EAAmC,OAAnC,EAAmD,OAAnD;AACD,CAXD,CAWE,OAAO,EAAP,EAAW,CACZ;;AAKK,MAAO,SAAP,CAAgB;AASpB,EAAA,WAAA,CAAY,OAAZ,EAA8B,SAA9B,EAAiD,YAAjD,EAA2E;AAL3E,SAAA,KAAA,GAA2C,SAA3C;AAEQ,SAAA,cAAA,GAAoD,SAApD;AAIN,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,YAAL,GAAoB,YAApB;;AACA,SAAK,kBAAL,GAA2B,CAAD,IAAO,KAAK,WAAL,CAAiB,CAAjB,CAAjC;AACD;;AAED,EAAA,QAAQ,CAAC,KAAD,EAAyC;AAC/C,SAAK,cAAL,GAAsB,KAAtB;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,WAAO,4BAAY,KAAK,cAAjB,CAAP,EAAyC;AACvC,YAAM,SAAS,GAAG,KAAK,cAAvB;AACA,WAAK,cAAL,GAAsB,cAAtB;AACA,MAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACD,QAAI,KAAK,cAAL,KAAwB,cAA5B,EAAsC;AACpC;AACD;;AAED,UAAM,WAAW,GAAG,KAAK,cAAzB;AACA,UAAM,WAAW,GAAG,KAAK,KAAzB;AACA,UAAM,oBAAoB,GAAG,WAAW,IAAI,IAAf,IACzB,WAAW,IAAI,IAAf,KACK,WAAW,CAAC,OAAZ,KAAwB,WAAW,CAAC,OAApC,IACA,WAAW,CAAC,IAAZ,KAAqB,WAAW,CAAC,IADjC,IAEA,WAAW,CAAC,OAAZ,KAAwB,WAAW,CAAC,OAHzC,CADJ;AAKA,UAAM,iBAAiB,GACnB,WAAW,IAAI,IAAf,KAAwB,WAAW,IAAI,IAAf,IAAuB,oBAA/C,CADJ;;AAGA,QAAI,oBAAJ,EAA0B;AACxB,WAAK,OAAL,CAAa,mBAAb,CACI,KAAK,SADT,EACoB,KAAK,kBADzB,EAC6C,KAAK,SADlD;AAED;;AACD,QAAI,iBAAJ,EAAuB;AACrB,WAAK,SAAL,GAAiB,UAAU,CAAC,WAAD,CAA3B;AACA,WAAK,OAAL,CAAa,gBAAb,CACI,KAAK,SADT,EACoB,KAAK,kBADzB,EAC6C,KAAK,SADlD;AAED;;AACD,SAAK,KAAL,GAAa,WAAb;AACA,SAAK,cAAL,GAAsB,cAAtB;AACD;;AAED,EAAA,WAAW,CAAC,KAAD,EAAa;AACtB,QAAI,OAAO,KAAK,KAAZ,KAAsB,UAA1B,EAAsC;AACpC,WAAK,KAAL,CAAW,IAAX,CAAgB,KAAK,YAAL,IAAqB,KAAK,OAA1C,EAAmD,KAAnD;AACD,KAFD,MAEO;AACJ,WAAK,KAAL,CAAmC,WAAnC,CAA+C,KAA/C;AACF;AACF;;AA3DmB,EA8DtB;AACA;AACA;;;;;AACA,MAAM,UAAU,GAAI,CAAD,IAA0C,CAAC,KACzD,qBAAqB,GACjB;AAAC,EAAA,OAAO,EAAE,CAAC,CAAC,OAAZ;AAAqB,EAAA,OAAO,EAAE,CAAC,CAAC,OAAhC;AAAyC,EAAA,IAAI,EAAE,CAAC,CAAC;AAAjD,CADiB,GAEjB,CAAC,CAAC,OAHmD,CAA9D;;;;;;;;;AC5eA;;AAnBA;;;;;;;;;;;;;;AAuBA;;;AAGM,MAAO,wBAAP,CAA+B;AACnC;;;;;;;;;AASA,EAAA,0BAA0B,CACtB,OADsB,EACJ,IADI,EACU,OADV,EAEtB,OAFsB,EAEA;AACxB,UAAM,MAAM,GAAG,IAAI,CAAC,CAAD,CAAnB;;AACA,QAAI,MAAM,KAAK,GAAf,EAAoB;AAClB,YAAM,SAAS,GAAG,IAAI,wBAAJ,CAAsB,OAAtB,EAA+B,IAAI,CAAC,KAAL,CAAW,CAAX,CAA/B,EAA8C,OAA9C,CAAlB;AACA,aAAO,SAAS,CAAC,KAAjB;AACD;;AACD,QAAI,MAAM,KAAK,GAAf,EAAoB;AAClB,aAAO,CAAC,IAAI,gBAAJ,CAAc,OAAd,EAAuB,IAAI,CAAC,KAAL,CAAW,CAAX,CAAvB,EAAsC,OAAO,CAAC,YAA9C,CAAD,CAAP;AACD;;AACD,QAAI,MAAM,KAAK,GAAf,EAAoB;AAClB,aAAO,CAAC,IAAI,2BAAJ,CAAyB,OAAzB,EAAkC,IAAI,CAAC,KAAL,CAAW,CAAX,CAAlC,EAAiD,OAAjD,CAAD,CAAP;AACD;;AACD,UAAM,SAAS,GAAG,IAAI,yBAAJ,CAAuB,OAAvB,EAAgC,IAAhC,EAAsC,OAAtC,CAAlB;AACA,WAAO,SAAS,CAAC,KAAjB;AACD;AACD;;;;;;AAIA,EAAA,oBAAoB,CAAC,OAAD,EAAuB;AACzC,WAAO,IAAI,eAAJ,CAAa,OAAb,CAAP;AACD;;AAjCkC;;;AAoC9B,MAAM,wBAAwB,GAAG,IAAI,wBAAJ,EAAjC;;;;;;;;;;;AC3CP;;AAnBA;;;;;;;;;;;;;;AA2CA;;;;AAIM,SAAU,eAAV,CAA0B,MAA1B,EAAgD;AACpD,MAAI,aAAa,GAAG,cAAc,CAAC,GAAf,CAAmB,MAAM,CAAC,IAA1B,CAApB;;AACA,MAAI,aAAa,KAAK,SAAtB,EAAiC;AAC/B,IAAA,aAAa,GAAG;AACd,MAAA,YAAY,EAAE,IAAI,OAAJ,EADA;AAEd,MAAA,SAAS,EAAE,IAAI,GAAJ;AAFG,KAAhB;AAIA,IAAA,cAAc,CAAC,GAAf,CAAmB,MAAM,CAAC,IAA1B,EAAgC,aAAhC;AACD;;AAED,MAAI,QAAQ,GAAG,aAAa,CAAC,YAAd,CAA2B,GAA3B,CAA+B,MAAM,CAAC,OAAtC,CAAf;;AACA,MAAI,QAAQ,KAAK,SAAjB,EAA4B;AAC1B,WAAO,QAAP;AACD,GAbmD,CAepD;AACA;;;AACA,QAAM,GAAG,GAAG,MAAM,CAAC,OAAP,CAAe,IAAf,CAAoB,gBAApB,CAAZ,CAjBoD,CAmBpD;;AACA,EAAA,QAAQ,GAAG,aAAa,CAAC,SAAd,CAAwB,GAAxB,CAA4B,GAA5B,CAAX;;AACA,MAAI,QAAQ,KAAK,SAAjB,EAA4B;AAC1B;AACA,IAAA,QAAQ,GAAG,IAAI,kBAAJ,CAAa,MAAb,EAAqB,MAAM,CAAC,kBAAP,EAArB,CAAX,CAF0B,CAG1B;;AACA,IAAA,aAAa,CAAC,SAAd,CAAwB,GAAxB,CAA4B,GAA5B,EAAiC,QAAjC;AACD,GA1BmD,CA4BpD;;;AACA,EAAA,aAAa,CAAC,YAAd,CAA2B,GAA3B,CAA+B,MAAM,CAAC,OAAtC,EAA+C,QAA/C;AACA,SAAO,QAAP;AACD;;AAiBM,MAAM,cAAc,GAAG,IAAI,GAAJ,EAAvB;;;;;;;;;;AC7EP;;AACA;;AAEA;;AArBA;;;;;;;;;;;;;;AAcA;;;AAUO,MAAM,KAAK,GAAG,IAAI,OAAJ,EAAd;AAEP;;;;;;;;;;;;;;;;;;AAeO,MAAM,MAAM,GACf,CAAC,MAAD,EACC,SADD,EAEC,OAFD,KAEqC;AACnC,MAAI,IAAI,GAAG,KAAK,CAAC,GAAN,CAAU,SAAV,CAAX;;AACA,MAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,0BAAY,SAAZ,EAAuB,SAAS,CAAC,UAAjC;AACA,IAAA,KAAK,CAAC,GAAN,CAAU,SAAV,EAAqB,IAAI,GAAG,IAAI,eAAJ,CAAY,MAAA,CAAA,MAAA,CAAA;AACjB,MAAA,eAAe,EAAf;AADiB,KAAA,EAEd,OAFc,CAAZ,CAA5B;AAIA,IAAA,IAAI,CAAC,UAAL,CAAgB,SAAhB;AACD;;AACD,EAAA,IAAI,CAAC,QAAL,CAAc,MAAd;AACA,EAAA,IAAI,CAAC,MAAL;AACD,CAfE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTP;;AACA;;AAGA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAGA;;AA/CA;;;;;;;;;;;;;;AAcA;;;;;;;;;;;;;;AAcA;;;;AASA;AAkBA;AACA;AACA;AACA,CAAC,MAAM,CAAC,iBAAD,CAAN,KAA8B,MAAM,CAAC,iBAAD,CAAN,GAA4B,EAA1D,CAAD,EAAgE,IAAhE,CAAqE,OAArE;AAEA;;;;;AAIO,MAAM,IAAI,GAAG,CAAC,OAAD,EAAgC,GAAG,MAAnC,KAChB,IAAI,8BAAJ,CAAmB,OAAnB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C,kDAA5C,CADG;AAGP;;;;;;;;AAIO,MAAM,GAAG,GAAG,CAAC,OAAD,EAAgC,GAAG,MAAnC,KACf,IAAI,iCAAJ,CAAsB,OAAtB,EAA+B,MAA/B,EAAuC,KAAvC,EAA8C,kDAA9C,CADG;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEP;;AAGA,MAAMA,SAAS,GAAG,OAAOC,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,CAACC,GAAtC,GAA4CC,GAAG,IAAIA,GAArE;AAEA,MAAMC,WAAW,GAAGJ,SAAS,CAAC,eAAD,CAA7B;AACA,MAAMK,UAAU,GAAGL,SAAS,CAAC,cAAD,CAA5B;AAEA,MAAMM,YAAY,GAAGN,SAAS,CAAC,gBAAD,CAA9B;AACA,MAAMO,YAAY,GAAGP,SAAS,CAAC,gBAAD,CAA9B;AACA,MAAMQ,aAAa,GAAGR,SAAS,CAAC,iBAAD,CAA/B;AACA,MAAMS,aAAa,GAAGT,SAAS,CAAC,iBAAD,CAA/B;AAEA,MAAMU,YAAY,GAAG,iBAArB;AAEA,IAAIC,OAAJ;AACA,IAAIC,SAAS,GAAG,CAAhB;;AAEA,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAC3BH,EAAAA,OAAO,GAAGG,OAAV;AACD;;AAED,SAASC,KAAT,GAAiB;AACfJ,EAAAA,OAAO,GAAG,IAAV;AACAC,EAAAA,SAAS,GAAG,CAAZ;AACD;;AAED,SAASI,MAAT,GAAkB;AAChB,MAAIC,EAAE,GAAGL,SAAT;AACAA,EAAAA,SAAS;AACT,SAAOK,EAAP;AACD;;AAED,MAAMC,KAAK,GAAGC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuBC,IAAvB,CAA4BH,OAAO,CAACC,OAAR,EAA5B,CAAd;;AAEA,SAASG,SAAT,GAAqB;AACnB,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIP,EAAJ;;AAEA,WAASQ,QAAT,GAAoB;AAClBR,IAAAA,EAAE,GAAG,IAAL;AACA,QAAIS,CAAC,GAAGF,KAAR;AACAA,IAAAA,KAAK,GAAG,EAAR;;AACA,SAAI,IAAIG,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGF,CAAC,CAACG,MAAvB,EAA+BF,CAAC,GAAGC,GAAnC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3CD,MAAAA,CAAC,CAACC,CAAD,CAAD;AACD;AACF;;AAED,SAAO,UAASG,IAAT,EAAe;AACpBN,IAAAA,KAAK,CAACO,IAAN,CAAWD,IAAX;;AACA,QAAGb,EAAE,IAAI,IAAT,EAAe;AACbA,MAAAA,EAAE,GAAGC,KAAK,CAACO,QAAD,CAAV;AACD;AACF,GALD;AAMD;;AAED,MAAMO,IAAI,GAAGT,SAAS,EAAtB;AACA,MAAMU,KAAK,GAAGV,SAAS,EAAvB;;AAEA,MAAMW,SAAN,CAAgB;AACdC,EAAAA,WAAW,CAACC,QAAD,EAAWC,IAAX,EAAiBC,IAAjB,EAAuB;AAChC,SAAKF,QAAL,GAAgBA,QAAhB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAI,IAAID,IAApB;AACA,SAAKhC,UAAL,IAAmB,IAAIkC,GAAJ,EAAnB;AACA,SAAKnC,WAAL,IAAoB,IAApB;AACA,SAAKoC,aAAL,GAAqB,KAArB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKD,aAAR,EAAuB;AACvBR,IAAAA,IAAI,CAAC,MAAM;AACT,UAAIU,MAAM,GAAG,KAAKC,WAAL,CAAiBrC,YAAjB,CAAb;AACA2B,MAAAA,KAAK,CAAC,MAAM;AACV,aAAKU,WAAL,CAAiBpC,YAAjB,EAA+BmC,MAA/B;;AAEA,YAAG,KAAKlC,aAAL,CAAH,EAAwB;AACtByB,UAAAA,KAAK,CAAC,MAAM;AACV,iBAAKU,WAAL,CAAiBnC,aAAjB;AACD,WAFI,CAAL;AAGD;AACF,OARI,CAAL;AASA,WAAKgC,aAAL,GAAqB,KAArB;AACD,KAZG,CAAJ;AAaA,SAAKA,aAAL,GAAqB,IAArB;AACD;;AAEDG,EAAAA,WAAW,CAACC,KAAD,EAAQC,GAAR,EAAa;AACtB,SAAKzC,WAAL,IAAoBwC,KAApB;;AACA,YAAOA,KAAP;AACE,WAAKrC,YAAL;AAAmB,eAAO,KAAKuC,MAAL,CAAYD,GAAZ,CAAP;;AACnB,WAAKvC,YAAL;AAAmB,eAAO,KAAKyC,MAAL,EAAP;;AACnB,WAAKvC,aAAL;AAAoB,eAAO,KAAKwC,UAAL,CAAgBxC,aAAhB,CAAP;AAHtB;;AAKA,SAAKJ,WAAL,IAAoB,IAApB;AACD;;AAED0C,EAAAA,MAAM,CAACJ,MAAD,EAAS;AACb,yBAAOA,MAAP,EAAe,KAAKL,IAApB;AACA,SAAKW,UAAL,CAAgBzC,YAAhB;AACD;;AAEDwC,EAAAA,MAAM,GAAG;AACPlC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAI6B,MAAM,GAAG,KAAKO,IAAL,GACX,KAAKb,QAAL,CAAcc,KAAd,CAAoB,KAAKZ,IAAzB,EAA+B,KAAKW,IAApC,CADW,GAEX,KAAKb,QAAL,CAAce,IAAd,CAAmB,KAAKb,IAAxB,EAA8B,KAAKA,IAAnC,CAFF;AAGAvB,IAAAA,KAAK;AACL,WAAO2B,MAAP;AACD;;AAEDM,EAAAA,UAAU,CAACI,MAAD,EAAS;AACjB,QAAIC,OAAO,GAAG,KAAKD,MAAL,CAAd;;AACA,QAAGC,OAAH,EAAY;AACVxC,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,WAAI,IAAIyC,MAAR,IAAkBD,OAAlB,EAA2B;AACzBC,QAAAA,MAAM,CAACH,IAAP,CAAY,IAAZ;AACD;;AACDpC,MAAAA,KAAK;AACN;AACF;;AAEDwC,EAAAA,QAAQ,GAAG;AACT,QAAIC,KAAK,GAAG,KAAKnD,UAAL,CAAZ;AACAmD,IAAAA,KAAK,CAACC,OAAN,CAAeC,IAAD,IAAU;AACtB,UAAI,OAAOA,IAAI,CAACH,QAAZ,KAAyB,UAA7B,EAAyC;AACvCG,QAAAA,IAAI,CAACH,QAAL;AACD;AACF,KAJD;AAKD;;AAtEa;;AAyEhB,SAASI,WAAT,CAAqBC,GAAG,GAAG,EAA3B,EAA+B;AAC7B,SAAOA,GAAG,CAACC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAtB,GAA0BD,GAAG,CAACE,WAAJ,EAA1B,GAA8CF,GAAG,CAACE,WAAJ,GAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,MAA7B,CAAoC,CAACC,GAAD,EAAMC,IAAN,KAAe;AACtG,WAAOD,GAAG,GAAGA,GAAG,GAAGC,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC,WAAf,EAAN,GAAqCF,IAAI,CAACG,KAAL,CAAW,CAAX,CAAxC,GAAwDH,IAAlE;AACD,GAFoD,EAEnD,EAFmD,CAArD;AAGD;;AAED,SAASI,SAAT,CAAmBlC,QAAnB,EAA6BmC,WAAW,GAAGC,WAA3C,EAAwD;AAACC,EAAAA,YAAY,GAAG,IAAhB;AAAsBC,EAAAA,cAAc,GAAG;AAAvC,IAA6C,EAArG,EAAyG;AACvG,QAAMC,OAAN,SAAsBJ,WAAtB,CAAkC;AAChC,eAAWK,kBAAX,GAAgC;AAC9B,aAAOxC,QAAQ,CAACwC,kBAAT,IAA+B,EAAtC;AACD;;AAEDzC,IAAAA,WAAW,GAAG;AACZ;;AACA,UAAIsC,YAAY,KAAK,KAArB,EAA4B;AAC1B,aAAKI,UAAL,GAAkB,IAAI3C,SAAJ,CAAcE,QAAd,EAAwB,IAAxB,CAAlB;AACD,OAFD,MAEO;AACL,aAAK0C,YAAL,CAAkB;AAAEC,UAAAA,IAAI,EAAE,MAAR;AAAgB,aAAGL;AAAnB,SAAlB;AACA,aAAKG,UAAL,GAAkB,IAAI3C,SAAJ,CAAcE,QAAd,EAAwB,KAAK4C,UAA7B,EAAyC,IAAzC,CAAlB;AACD;AACF;;AAEDC,IAAAA,iBAAiB,GAAG;AAClB,WAAKJ,UAAL,CAAgBpC,MAAhB;AACD;;AAEDyC,IAAAA,oBAAoB,GAAG;AACrB,WAAKL,UAAL,CAAgBtB,QAAhB;AACD;;AAED4B,IAAAA,wBAAwB,CAACC,IAAD,EAAOC,CAAP,EAAUC,QAAV,EAAoB;AAC1C,UAAI1B,GAAG,GAAG0B,QAAQ,KAAK,EAAb,GAAkB,IAAlB,GAAyBA,QAAnC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB7B,WAAW,CAACyB,IAAD,CAA7B,EAAqCxB,GAArC;AACD;;AA1B+B;;AA4BlC,WAAS6B,cAAT,CAAwBC,YAAxB,EAAsC;AACpC,QAAIC,KAAK,GAAGD,YAAZ;AACA,WAAOE,MAAM,CAACC,MAAP,CAAc;AACnBC,MAAAA,UAAU,EAAE,IADO;AAEnBC,MAAAA,YAAY,EAAE,IAFK;;AAGnBC,MAAAA,GAAG,GAAG;AACJ,eAAOL,KAAP;AACD,OALkB;;AAMnBH,MAAAA,GAAG,CAACF,QAAD,EAAW;AACZK,QAAAA,KAAK,GAAGL,QAAR;;AACA,aAAKT,UAAL,CAAgBpC,MAAhB;AACD;;AATkB,KAAd,CAAP;AAWD;;AAED,QAAMwD,KAAK,GAAG,IAAIC,KAAJ,CAAU3B,WAAW,CAAC4B,SAAtB,EAAiC;AAC7CX,IAAAA,GAAG,CAACY,MAAD,EAASC,GAAT,EAAcV,KAAd,EAAqBW,QAArB,EAA+B;AAChC,UAAGD,GAAG,IAAID,MAAV,EAAkB;AAChBb,QAAAA,OAAO,CAACC,GAAR,CAAYY,MAAZ,EAAoBC,GAApB,EAAyBV,KAAzB;AACD;;AACD,UAAIY,IAAJ;;AACA,UAAG,OAAOF,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAAC,CAAD,CAAH,KAAW,GAAzC,EAA8C;AAC5CE,QAAAA,IAAI,GAAG;AACLT,UAAAA,UAAU,EAAE,IADP;AAELC,UAAAA,YAAY,EAAE,IAFT;AAGLS,UAAAA,QAAQ,EAAE,IAHL;AAILb,UAAAA;AAJK,SAAP;AAMD,OAPD,MAOO;AACLY,QAAAA,IAAI,GAAGd,cAAc,CAACE,KAAD,CAArB;AACD;;AACDC,MAAAA,MAAM,CAACa,cAAP,CAAsBH,QAAtB,EAAgCD,GAAhC,EAAqCE,IAArC;;AAEA,UAAGA,IAAI,CAACf,GAAR,EAAa;AACXe,QAAAA,IAAI,CAACf,GAAL,CAASrC,IAAT,CAAcmD,QAAd,EAAwBX,KAAxB;AACD;;AAED,aAAO,IAAP;AACD;;AAvB4C,GAAjC,CAAd;AA0BAC,EAAAA,MAAM,CAACc,cAAP,CAAsB/B,OAAO,CAACwB,SAA9B,EAAyCF,KAAzC;AAGA,SAAOtB,OAAP;AACD;;AAED,MAAMgC,IAAN,CAAW;AACTxE,EAAAA,WAAW,CAAClB,EAAD,EAAK2F,EAAL,EAAS;AAClB,SAAK3F,EAAL,GAAUA,EAAV;AACA,SAAK2F,EAAL,GAAUA,EAAV;AACD;;AAJQ;;;;AAOX,SAASC,GAAT,CAAaF,IAAb,EAAmB,GAAG1D,IAAtB,EAA4B;AAC1B,MAAIhC,EAAE,GAAGD,MAAM,EAAf;AACA,MAAIwC,KAAK,GAAG7C,OAAO,CAACN,UAAD,CAAnB;AAEA,MAAIqD,IAAI,GAAGF,KAAK,CAACwC,GAAN,CAAU/E,EAAV,CAAX;;AACA,MAAG,CAACyC,IAAJ,EAAU;AACRA,IAAAA,IAAI,GAAG,IAAIiD,IAAJ,CAAS1F,EAAT,EAAaN,OAAb,EAAsB,GAAGsC,IAAzB,CAAP;AACAO,IAAAA,KAAK,CAACgC,GAAN,CAAUvE,EAAV,EAAcyC,IAAd;AACD;;AAED,SAAOA,IAAI,CAACjB,MAAL,CAAY,GAAGQ,IAAf,CAAP;AACD;;AAED,SAASS,IAAT,CAAciD,IAAd,EAAoB;AAClB,SAAOE,GAAG,CAACvF,IAAJ,CAAS,IAAT,EAAeqF,IAAf,CAAP;AACD;;AAED,MAAMG,OAAO,GAAGpD,IAAI,CAAC,cAAciD,IAAd,CAAmB;AACtCxE,EAAAA,WAAW,CAAClB,EAAD,EAAK2F,EAAL,EAASG,EAAT,EAAaC,MAAb,EAAqB;AAC9B,UAAM/F,EAAN,EAAU2F,EAAV;AACA,SAAKjB,KAAL,GAAaoB,EAAE,EAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACD;;AAEDvE,EAAAA,MAAM,CAACsE,EAAD,EAAKC,MAAL,EAAa;AACjB,QAAG,KAAKC,UAAL,CAAgBD,MAAhB,CAAH,EAA4B;AAC1B,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAKrB,KAAL,GAAaoB,EAAE,EAAf;AACD;;AACD,WAAO,KAAKpB,KAAZ;AACD;;AAEDsB,EAAAA,UAAU,CAACD,MAAD,EAAS;AACjB,WAAOA,MAAM,CAACE,IAAP,CAAY,CAACvB,KAAD,EAAQhE,CAAR,KAAc,KAAKqF,MAAL,CAAYrF,CAAZ,MAAmBgE,KAA7C,CAAP;AACD;;AAjBqC,CAApB,CAApB;;;AAoBA,MAAMwB,WAAW,GAAG,CAACJ,EAAD,EAAKK,MAAL,KAAgBN,OAAO,CAAC,MAAMC,EAAP,EAAWK,MAAX,CAA3C;;;;AAEA,SAASC,UAAT,CAAoBT,EAApB,EAAwBU,EAAxB,EAA4B;AAC1B,MAAG,EAAE9G,aAAa,IAAIoG,EAAnB,CAAH,EAA2B;AACzBA,IAAAA,EAAE,CAACpG,aAAD,CAAF,GAAoB,EAApB;AACD;;AACDoG,EAAAA,EAAE,CAACpG,aAAD,CAAF,CAAkBuB,IAAlB,CAAuBuF,EAAvB;AACD;;AAED,MAAMC,SAAS,GAAG7D,IAAI,CAAC,cAAciD,IAAd,CAAmB;AACxCxE,EAAAA,WAAW,CAAClB,EAAD,EAAK2F,EAAL,EAAS;AAClB,UAAM3F,EAAN,EAAU2F,EAAV;AACA,SAAKI,MAAL,GAAc,KAAd;AACAK,IAAAA,UAAU,CAACT,EAAD,EAAK,IAAL,CAAV;AACD;;AAEDnE,EAAAA,MAAM,CAAC+E,QAAD,EAAWR,MAAX,EAAmB;AACvB,SAAKQ,QAAL,GAAgBA,QAAhB;AACA,SAAKC,UAAL,GAAkB,KAAKT,MAAvB;AACA,SAAKA,MAAL,GAAcA,MAAd;AACD;;AAED7D,EAAAA,IAAI,GAAG;AACL,QAAG,KAAK6D,MAAR,EAAgB;AACd,UAAG,KAAKC,UAAL,EAAH,EAAsB;AACpB,aAAKS,GAAL;AACD;AACF,KAJD,MAIO;AACL,WAAKA,GAAL;AACD;AACF;;AAEDA,EAAAA,GAAG,GAAG;AACJ,SAAKnE,QAAL;AACA,SAAKoE,SAAL,GAAiB,KAAKH,QAAL,CAAcrE,IAAd,CAAmB,KAAKyD,EAAxB,CAAjB;AACD;;AAEDrD,EAAAA,QAAQ,GAAG;AACT,QAAG,KAAKoE,SAAR,EAAmB;AACjB,WAAKA,SAAL;AACD;AACF;;AAEDV,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKQ,UAAL,KAAoB,KAApB,IAA6B,KAAKT,MAAL,CAAYE,IAAZ,CAAiB,CAACvB,KAAD,EAAQhE,CAAR,KAAc,KAAK8F,UAAL,CAAgB9F,CAAhB,MAAuBgE,KAAtD,CAApC;AACD;;AApCuC,CAApB,CAAtB;;AAuCA,MAAMiC,QAAQ,GAAGlE,IAAI,CAAC,cAAciD,IAAd,CAAmB;AACvCxE,EAAAA,WAAW,CAAClB,EAAD,EAAK2F,EAAL,EAASlB,YAAT,EAAuB;AAChC,UAAMzE,EAAN,EAAU2F,EAAV;AACA,SAAKiB,OAAL,GAAe,KAAKA,OAAL,CAAavG,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKwG,QAAL,CAAcpC,YAAd;AACD;;AAEDjD,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKQ,IAAZ;AACD;;AAED4E,EAAAA,OAAO,CAAClC,KAAD,EAAQ;AACb,QAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AAC/B,YAAMoC,SAAS,GAAGpC,KAAlB;AACA,YAAM,CAACqC,aAAD,IAAkB,KAAK/E,IAA7B;AACA0C,MAAAA,KAAK,GAAGoC,SAAS,CAACC,aAAD,CAAjB;AACD;;AAED,SAAKF,QAAL,CAAcnC,KAAd;AACA,SAAKiB,EAAL,CAAQnE,MAAR;AACD;;AAEDqF,EAAAA,QAAQ,CAACnC,KAAD,EAAQ;AACd,SAAK1C,IAAL,GAAY2C,MAAM,CAACC,MAAP,CAAc,CAACF,KAAD,EAAQ,KAAKkC,OAAb,CAAd,CAAZ;AACD;;AAxBsC,CAApB,CAArB;;AA2BA,MAAMI,UAAU,GAAGvE,IAAI,CAAC,cAAciD,IAAd,CAAmB;AACzCxE,EAAAA,WAAW,CAAClB,EAAD,EAAK2F,EAAL,EAASvB,CAAT,EAAY6C,YAAZ,EAA0B;AACnC,UAAMjH,EAAN,EAAU2F,EAAV;AACA,SAAKuB,QAAL,GAAgB,KAAKA,QAAL,CAAc7G,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAK8G,KAAL,GAAaF,YAAb;AACD;;AAEDzF,EAAAA,MAAM,CAAC4F,OAAD,EAAU;AACd,SAAKA,OAAL,GAAeA,OAAf;AACA,WAAO,CAAC,KAAKD,KAAN,EAAa,KAAKD,QAAlB,CAAP;AACD;;AAEDA,EAAAA,QAAQ,CAACG,MAAD,EAAS;AACf,SAAKF,KAAL,GAAa,KAAKC,OAAL,CAAa,KAAKD,KAAlB,EAAyBE,MAAzB,CAAb;AACA,SAAK1B,EAAL,CAAQnE,MAAR;AACD;;AAfwC,CAApB,CAAvB;;AAkBA,MAAM8F,eAAe,GAAG,IAAIC,OAAJ,EAAxB;AACA,MAAMC,eAAe,GAAG,IAAID,OAAJ,EAAxB;;AAEA,MAAME,kBAAN,SAAiCxG,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,QAAD,EAAW8B,IAAX,EAAiB;AAC1B,UAAM9B,QAAN,EAAgB8B,IAAhB;AACA,SAAKyE,OAAL,GAAe,IAAf;AACD;;AAED7F,EAAAA,MAAM,CAACJ,MAAD,EAAS;AACb,SAAKJ,IAAL,CAAUsG,QAAV,CAAmBlG,MAAnB;AACA,SAAKJ,IAAL,CAAUQ,MAAV;AACD;;AAEDS,EAAAA,QAAQ,GAAG;AACT,UAAMA,QAAN;AACA,QAAIW,IAAI,GAAGuE,eAAe,CAACzC,GAAhB,CAAoB,IAApB,CAAX;AACAuC,IAAAA,eAAe,CAACM,MAAhB,CAAuB3E,IAAvB;AACD;;AAfwC;;AAoB3C,SAAS4E,SAAT,CAAmB1G,QAAnB,EAA6B;AAC3B,WAAS2G,OAAT,CAAiB,GAAG9F,IAApB,EAA0B;AACxB,WAAOiB,IAAI,IAAI;AACb,UAAI8E,IAAI,GAAGT,eAAe,CAACvC,GAAhB,CAAoB9B,IAApB,CAAX;;AACA,UAAG,CAAC8E,IAAJ,EAAU;AACRA,QAAAA,IAAI,GAAG,IAAIN,kBAAJ,CAAuBtG,QAAvB,EAAiC8B,IAAjC,CAAP;AACAqE,QAAAA,eAAe,CAAC/C,GAAhB,CAAoBtB,IAApB,EAA0B8E,IAA1B;AACAP,QAAAA,eAAe,CAACjD,GAAhB,CAAoBwD,IAApB,EAA0B9E,IAA1B;AACA+E,QAAAA,gBAAgB,CAACD,IAAD,EAAO9E,IAAP,CAAhB;AACD;;AACD8E,MAAAA,IAAI,CAAC/F,IAAL,GAAYA,IAAZ;AACA+F,MAAAA,IAAI,CAACvG,MAAL;AACD,KAVD;AAWD;;AAED,SAAO,wBAAUsG,OAAV,CAAP;AACD;;AAED,MAAMG,QAAQ,GAAGC,KAAK,CAAChD,SAAN,CAAgB+C,QAAjC;;AAEA,SAASD,gBAAT,CAA0BD,IAA1B,EAAgC9E,IAAhC,EAAsCkF,IAAI,GAAGlF,IAAI,CAACmF,SAAlD,EAA6D;AAC3D,MAAIhH,IAAI,GAAG+G,IAAI,CAACE,UAAhB;AACA,MAAIC,EAAE,GAAG,IAAIC,gBAAJ,CAAqBC,SAAS,IAAI;AACzC,SAAI,IAAIC,QAAR,IAAoBD,SAApB,EAA+B;AAC7B,UAAGP,QAAQ,CAAC/F,IAAT,CAAcuG,QAAQ,CAACC,YAAvB,EAAqCP,IAArC,CAAH,EAA+C;AAC7CG,QAAAA,EAAE,CAACK,UAAH;;AAEA,YAAGR,IAAI,CAACE,UAAL,YAA2BO,UAA9B,EAA0C;AACxCZ,UAAAA,gBAAgB,CAACD,IAAD,EAAO9E,IAAP,CAAhB;AACD,SAFD,MAEO;AACL8E,UAAAA,IAAI,CAACzF,QAAL;AACD;;AACD;AACD,OATD,MASO,IAAG2F,QAAQ,CAAC/F,IAAT,CAAcuG,QAAQ,CAACI,UAAvB,EAAmCV,IAAI,CAACW,WAAxC,CAAH,EAAyD;AAC9DR,QAAAA,EAAE,CAACK,UAAH;AACAX,QAAAA,gBAAgB,CAACD,IAAD,EAAO9E,IAAP,EAAakF,IAAI,CAACW,WAAlB,CAAhB;AACA;AACD;AACF;AACF,GAjBQ,CAAT;AAkBAR,EAAAA,EAAE,CAACS,OAAH,CAAW3H,IAAX,EAAiB;AAAE4H,IAAAA,SAAS,EAAE;AAAb,GAAjB;AACD;;AAED,SAASC,WAAT,CAAqBtD,EAArB,EAAyBuD,QAAzB,EAAmC;AACjC,MAAG,EAAE1J,aAAa,IAAImG,EAAnB,CAAH,EAA2B;AACzBA,IAAAA,EAAE,CAACnG,aAAD,CAAF,GAAoB,EAApB;AACD;;AACDmG,EAAAA,EAAE,CAACnG,aAAD,CAAF,CAAkBsB,IAAlB,CAAuBoI,QAAvB;AACD;;AAED,MAAMC,UAAU,GAAG1G,IAAI,CAAC,cAAciD,IAAd,CAAmB;AACzCxE,EAAAA,WAAW,CAAClB,EAAD,EAAK2F,EAAL,EAAS;AAClB,UAAM3F,EAAN,EAAU2F,EAAV;AACAsD,IAAAA,WAAW,CAACtD,EAAD,EAAK,IAAL,CAAX;AACA,SAAKyD,QAAL,GAAgB,KAAKA,QAAL,CAAc/I,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDmB,EAAAA,MAAM,CAAC6H,OAAD,EAAU;AACd,QAAI,KAAK1D,EAAL,CAAQ+B,OAAZ,EAAqB;AACnB,YAAM,IAAI4B,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAED,QAAI,KAAKD,OAAL,KAAiBA,OAArB,EAA8B;AAC5B,WAAKE,UAAL,CAAgBF,OAAhB;;AACA,WAAKA,OAAL,GAAeA,OAAf;AACD;;AAED,WAAO,KAAK3E,KAAZ;AACD;;AAED0E,EAAAA,QAAQ,CAAC1E,KAAD,EAAQ;AACd,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKiB,EAAL,CAAQnE,MAAR;AACD;;AAED+H,EAAAA,UAAU,CAACF,OAAD,EAAU;AAClB,UAAMG,MAAM,GAAG;AAAEH,MAAAA,OAAF;AAAW9C,MAAAA,QAAQ,EAAE,KAAK6C;AAA1B,KAAf;AAEA,SAAKzD,EAAL,CAAQtE,IAAR,CAAaoI,aAAb,CAA2B,IAAIC,WAAJ,CAAgBjK,YAAhB,EAA8B;AACvD+J,MAAAA,MADuD;AAC/C;AACRG,MAAAA,OAAO,EAAE,IAF8C;AAExC;AACfC,MAAAA,UAAU,EAAE,IAH2C;AAGrC;AAClBC,MAAAA,QAAQ,EAAE,IAJ6C,CAIvC;;AAJuC,KAA9B,CAA3B;AAOA,UAAM;AAAEC,MAAAA,WAAF;AAAepF,MAAAA;AAAf,QAAyB8E,MAA/B;AAEA,SAAK9E,KAAL,GAAaoF,WAAW,GAAGpF,KAAH,GAAW2E,OAAO,CAACU,YAA3C;AAEA,SAAKC,YAAL,GAAoBF,WAApB;AACD;;AAEDxH,EAAAA,QAAQ,GAAG;AACT,QAAI,KAAK0H,YAAT,EAAuB;AACrB,WAAKA,YAAL;AACD;AACF;;AA9CwC,CAApB,CAAvB;;;AAiDA,MAAMC,aAAa,GAAIF,YAAD,IAAkB;AACtC,QAAMV,OAAO,GAAG,EAAhB;AAEAA,EAAAA,OAAO,CAACa,QAAR,GAAmB,cAAc3G,WAAd,CAA0B;AAC3CrC,IAAAA,WAAW,GAAG;AACZ;AACA,WAAKiJ,SAAL,GAAiB,EAAjB;;AAEA,WAAKC,YAAL,GAAqBC,KAAD,IAAW;AAC7B,cAAM;AAAEb,UAAAA;AAAF,YAAaa,KAAnB;;AAEA,YAAIb,MAAM,CAACH,OAAP,KAAmBA,OAAvB,EAAgC;AAC9BG,UAAAA,MAAM,CAAC9E,KAAP,GAAe,KAAKA,KAApB;;AAEA8E,UAAAA,MAAM,CAACM,WAAP,GAAqB,MAAM;AACzB,kBAAMQ,KAAK,GAAG,KAAKH,SAAL,CAAevH,OAAf,CAAuB4G,MAAM,CAACjD,QAA9B,CAAd;;AAEA,gBAAI+D,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,mBAAKH,SAAL,CAAeI,MAAf,CAAsBD,KAAtB,EAA6B,CAA7B;AACD;AACF,WAND;;AAQA,eAAKH,SAAL,CAAerJ,IAAf,CAAoB0I,MAAM,CAACjD,QAA3B;AAEA8D,UAAAA,KAAK,CAACG,eAAN;AACD;AACF,OAlBD;;AAoBA,WAAKC,gBAAL,CAAsBhL,YAAtB,EAAoC,KAAK2K,YAAzC;AACD;;AAEDnG,IAAAA,oBAAoB,GAAG;AACrB,WAAKyG,mBAAL,CAAyBjL,YAAzB,EAAuC,KAAK2K,YAA5C;AACD;;AAED,QAAI1F,KAAJ,CAAUA,KAAV,EAAiB;AACf,WAAKiG,MAAL,GAAcjG,KAAd;AACA,WAAKyF,SAAL,CAAe3H,OAAf,CAAuB+D,QAAQ,IAAIA,QAAQ,CAAC7B,KAAD,CAA3C;AACD;;AAED,QAAIA,KAAJ,GAAY;AACV,aAAO,KAAKiG,MAAZ;AACD;;AAvC0C,GAA7C;AA0CAtB,EAAAA,OAAO,CAACuB,QAAR,GAAmBvH,SAAS,CAAC,UAAU;AAAEvB,IAAAA,MAAM,EAAE+I;AAAV,GAAV,EAAiC;AAC5D,UAAMC,OAAO,GAAG3B,UAAU,CAACE,OAAD,CAA1B;AAEA,WAAOwB,SAAS,CAACC,OAAD,CAAhB;AACD,GAJ2B,CAA5B;AAMAzB,EAAAA,OAAO,CAACU,YAAR,GAAuBA,YAAvB;AAEA,SAAOV,OAAP;AACD,CAtDD;;;;;;;;;;;;;ACxdA;;;;;;;;;;;;;;;;;;AACA;AAEA,IAAI0B,MAAM,GAAG,EAAb;AACA,IAAIC,aAAa,GAAG,EAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAC9D,KAAD,EAAQ+D,OAAR;AAAA,SAAoBA,OAApB;AAAA,CAAvB;;IAEMC;;;AACJ,0BAAYhH,IAAZ,EAAkBiH,KAAlB,EAAyBpE,UAAzB,EAAqC;AAAA;;AACnC,SAAK7C,IAAL,GAAYA,IAAZ;AACA6C,IAAAA,UAAU,GACR,KAAKE,QAAL,GAAgBkE,KAAK,CAACC,QADd,GACyB,KAAKA,QAAL,GAAgBD,KAAK,CAACC,QADzD;;AAEA,SAAKC,QAAL,GAAgB;AAAA,aAAMF,KAAK,CAACjE,KAAZ;AAAA,KAAhB;;AACA,SAAKoE,SAAL,GAAiBA,SAAjB;AACA,SAAKzB,WAAL,GAAmBA,WAAnB;AACD;;;;+BAEU;AACT0B,MAAAA,OAAO,CAACC,IAAR,mCAAwC,KAAKtH,IAA7C;AACD;;;+BAEU;AACTqH,MAAAA,OAAO,CAACC,IAAR,mCAAwC,KAAKtH,IAA7C;AACD;;;;;;AAGH,SAASuH,oBAAT,CAA8BC,UAA9B,EAA0C;AACxC,MAAMxH,IAAI,GAAGwH,UAAU,YAAYR,cAAtB,GAAuCQ,UAAU,CAACxH,IAAlD,GAAyDwH,UAAtE;AACA,SAAOZ,MAAM,CAAC5G,IAAD,CAAb;AACD;AAED;;;;;;;;AAQA;;;;;;AAIO,SAASyH,WAAT,CAAqBzH,IAArB,EAA+D;AAAA,MAApCgD,KAAoC,uEAA5B,EAA4B;AAAA,MAAxBC,OAAwB,uEAAhB6D,cAAgB;;AACpE,MAAI,OAAO9G,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,6BAAN;AACD;;AACD,MAAI4G,MAAM,CAAC5G,IAAD,CAAV,EAAkB;AAChB,UAAM,sBAAN;AACD;;AAED,MAAMiH,KAAK,GAAG;AACZjE,IAAAA,KAAK,EAALA,KADY;AAEZC,IAAAA,OAAO,EAAPA,OAFY;AAGZiE,IAAAA,QAHY,oBAGHhE,MAHG,EAGKd,QAHL,EAGe;AAAA;;AACzB,WAAKY,KAAL,GAAa,KAAKC,OAAL,CAAa,KAAKD,KAAlB,EAAyBE,MAAzB,CAAb;AACA,WAAKwE,OAAL,CAAarJ,OAAb,CAAqB,UAAAsJ,MAAM;AAAA,eAAIA,MAAM,CAAC,KAAI,CAAC3E,KAAN,CAAV;AAAA,OAA3B;AACA,UAAI,OAAOZ,QAAP,KAAoB,UAAxB,EAAoCA,QAAQ,CAAC,KAAKY,KAAN,CAAR;;AACpC,UAAIE,MAAM,IAAIA,MAAM,CAAC0E,IAAjB,IACFf,aAAa,CAAC3D,MAAM,CAAC0E,IAAR,CADf,EAC8B;AAC5Bf,QAAAA,aAAa,CAAC3D,MAAM,CAAC0E,IAAR,CAAb,CACGvJ,OADH,CACW,UAAAwJ,YAAY;AAAA,iBAAIA,YAAY,CAAC7H,IAAb,KAAsBA,IAAtB,IACvB6H,YAAY,CAACzF,QAAb,CAAsBc,MAAtB,EAA8B,KAAI,CAACF,KAAnC,CADmB;AAAA,SADvB;AAGD;AACF,KAbW;AAcZ0E,IAAAA,OAAO,EAAE;AAdG,GAAd;AAgBAT,EAAAA,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACC,QAAN,CAAehL,IAAf,CAAoB+K,KAApB,CAAjB;AACAA,EAAAA,KAAK,CAACa,MAAN,GAAe,IAAId,cAAJ,CAAmBhH,IAAnB,EAAyBiH,KAAzB,EAAgChE,OAAO,KAAK6D,cAA5C,CAAf;AAEAF,EAAAA,MAAM,GAAGpG,MAAM,CAACuH,MAAP,CAAc,EAAd,EAAkBnB,MAAlB,sBAA6B5G,IAA7B,EAAoCiH,KAApC,EAAT;AACA,SAAOA,KAAK,CAACa,MAAb;AACD;AAED;;;;;;;AAKO,SAASE,cAAT,CAAwBhI,IAAxB,EAA8B;AACnC,MAAI;AACF,WAAO4G,MAAM,CAAC5G,IAAD,CAAN,CAAa8H,MAApB;AACD,GAFD,CAEE,OAAMG,CAAN,EAAS;AACT,UAAM,sBAAN;AACD;AACF;AAED;;;;;;;AAKO,SAASC,QAAT,CAAkBV,UAAlB,EAA8B;AACnC,MAAMP,KAAK,GAAGM,oBAAoB,CAACC,UAAD,CAAlC;;AACA,MAAI,CAACP,KAAL,EAAY;AACV,UAAM,sBAAN;AACD;;AAJkC,kBAMZ,uBAASA,KAAK,CAACjE,KAAf,CANY;AAAA;AAAA,MAM3BA,KAN2B;AAAA,MAMpB5C,GANoB;;AAQnC,0BAAU;AAAA,WAAM,YAAM;AACpB6G,MAAAA,KAAK,CAACS,OAAN,GAAgBT,KAAK,CAACS,OAAN,CAAcS,MAAd,CAAqB,UAAAR,MAAM;AAAA,eAAIA,MAAM,KAAKvH,GAAf;AAAA,OAA3B,CAAhB;AACD,KAFS;AAAA,GAAV,EAEG,EAFH;;AAIA,MAAI,CAAC6G,KAAK,CAACS,OAAN,CAAc5D,QAAd,CAAuB1D,GAAvB,CAAL,EAAkC;AAChC6G,IAAAA,KAAK,CAACS,OAAN,CAAc/K,IAAd,CAAmByD,GAAnB;AACD;;AAED,SAAO,CAAE4C,KAAF,EAASiE,KAAK,CAACC,QAAf,CAAP;AACD;;AAED,SAASE,SAAT,CAAmBgB,OAAnB,EAA4BhG,QAA5B,EAAsC;AAAA;;AACpC,MAAI,CAACgG,OAAD,IAAY,CAACrE,KAAK,CAACsE,OAAN,CAAcD,OAAd,CAAjB,EACE,MAAM,iCAAN;AACF,MAAI,CAAChG,QAAD,IAAa,OAAOA,QAAP,KAAoB,UAArC,EACE,MAAM,oCAAN;AACF,MAAGkG,eAAe,CAAC,KAAKtI,IAAN,CAAlB,EACE,MAAM,yFAAN;AACFoI,EAAAA,OAAO,CAAC/J,OAAR,CAAgB,UAAA6E,MAAM,EAAI;AACxB,QAAG,CAAC2D,aAAa,CAAC3D,MAAD,CAAjB,EAA2B;AACzB2D,MAAAA,aAAa,CAAC3D,MAAD,CAAb,GAAwB,EAAxB;AACD;;AACD2D,IAAAA,aAAa,CAAC3D,MAAD,CAAb,CAAsBvG,IAAtB,CAA2B;AAACyF,MAAAA,QAAQ,EAARA,QAAD;AAAWpC,MAAAA,IAAI,EAAC,MAAI,CAACA;AAArB,KAA3B;AACD,GALD;AAMD;;AAED,SAAS2F,WAAT,GAAuB;AAAA;;AACrB,MAAM4C,IAAI,GAAG/H,MAAM,CAAC+H,IAAP,CAAY1B,aAAZ,CAAb;AACA0B,EAAAA,IAAI,CACDlK,OADH,CACW,UAAA4C,GAAG,EAAI;AACd,QAAG4F,aAAa,CAAC5F,GAAD,CAAb,CAAmBxE,MAAnB,KAA8B,CAAjC,EAAoC;AAClC,aAAOoK,aAAa,CAAC5F,GAAD,CAApB;AACD,KAFD,MAEO;AACL4F,MAAAA,aAAa,CAAC5F,GAAD,CAAb,GAAqB4F,aAAa,CAAC5F,GAAD,CAAb,CAClBkH,MADkB,CACX,UAACjF,MAAD,EAAS3G,CAAT;AAAA,eAAgB2G,MAAM,CAAClD,IAAP,KAAgB,MAAI,CAACA,IAArC;AAAA,OADW,CAArB;AAED;AACF,GARH;AASD;;AAAA;;AAED,SAASsI,eAAT,CAAyBtI,IAAzB,EAA+B;AAC7B,MAAMuI,IAAI,GAAG/H,MAAM,CAAC+H,IAAP,CAAY1B,aAAZ,CAAb;AACA,SAAO0B,IAAI,CAACC,IAAL,CAAU,UAAAvH,GAAG;AAAA,WAAI4F,aAAa,CAAC5F,GAAD,CAAb,CACrBuH,IADqB,CAChB,UAAAtF,MAAM;AAAA,aAAIA,MAAM,IAAIA,MAAM,CAAClD,IAAP,KAAgBA,IAA9B;AAAA,KADU,CAAJ;AAAA,GAAb,CAAP;AAGD;;;;;;;;;AClJD,IAAMiD,OAAO,GAAG,SAAVA,OAAU,CAACD,KAAD,EAAQE,MAAR,EAAmB;AAAA,MAC1B0E,IAD0B,GAClB1E,MADkB,CAC1B0E,IAD0B;;AAEjC,UAAQA,IAAR;AACE,SAAK,QAAL;AACE5E,MAAAA,KAAK,CAAChD,IAAN,GAAa,WAAb;AACA,aAAOgD,KAAP;;AACF;AACE,aAAOA,KAAP;AALJ;AAOD,CATD;;eAUeC;;;;;ACVf;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMwF,QAAQ,GAAG;AAACzI,EAAAA,IAAI,EAAE;AAAP,CAAjB;AACA,IAAM0I,aAAa,GAAG,4BACpB,UADoB,EAEpBD,QAFoB,EAGpBxF,gBAHoB,CAAtB;;AAMA,IAAM0F,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACP,yBAASD,aAAT,CADO;AAAA;AAAA,MAChB1F,KADgB;;AAEvB,aAAO4F,aAAP,qBACgB5F,KAAK,CAAChD,IADtB;AAGD,CALD;;AAQA,IAAM6I,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,mBACG,yBAASH,aAAT,CADH;AAAA;AAAA,MAChB1F,KADgB;AAAA,MACTD,QADS;;AAEvB,aAAO6F,aAAP,sBACgD5F,KAAK,CAAChD,IADtD,EAEoB;AAAA,WAAM+C,QAAQ,CAAC;AAAC6E,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAd;AAAA,GAFpB;AAID,CAND;;AAQAkB,cAAc,CAACC,MAAf,CAAsB,OAAtB,EAA+B,wBAAUJ,UAAV,CAA/B;AACAG,cAAc,CAACC,MAAf,CAAsB,OAAtB,EAA+B,wBAAUF,UAAV,CAA/B;;AAEA,IAAMG,GAAG,GAAE,SAALA,GAAK,GAAM;AACf,aAAOJ,aAAP;AAID,CALD;;AAOAE,cAAc,CAACC,MAAf,CAAsB,gBAAtB,EAAwC,wBAAUC,GAAV,CAAxC;;;ACtCA,IAAIC,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAACnL,IAAV,CAAe,IAAf,EAAqBuL,UAArB;AACA,OAAKC,GAAL,GAAW;AACTC,IAAAA,IAAI,EAAEL,MAAM,CAACC,MAAP,CAAcK,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUjI,EAAV,EAAc;AACpB,WAAK+H,gBAAL,CAAsB/M,IAAtB,CAA2BgF,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTkI,IAAAA,OAAO,EAAE,UAAUlI,EAAV,EAAc;AACrB,WAAKgI,iBAAL,CAAuBhN,IAAvB,CAA4BgF,EAA5B;AACD;AATQ,GAAX;AAYAwH,EAAAA,MAAM,CAACC,MAAP,CAAcK,OAAd,GAAwB,IAAxB;AACD;;AAEDN,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIS,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGb,MAAM,CAACC,MAAP,CAAcY,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIJ,SAAJ,CAAcG,QAAQ,GAAG,KAAX,GAAmBF,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAG,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASrE,KAAT,EAAgB;AAC7B4D,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIP,IAAI,GAAGgB,IAAI,CAACC,KAAL,CAAWvE,KAAK,CAACsD,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAAC5B,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAI8C,OAAO,GAAG,KAAd;AACAlB,MAAAA,IAAI,CAACmB,MAAL,CAAYtM,OAAZ,CAAoB,UAASuM,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAAC/O,EAA7B,CAA9B;;AACA,cAAIiP,SAAJ,EAAe;AACbJ,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAIlB,IAAI,CAACmB,MAAL,CAAYO,KAAZ,CAAkB,UAASN,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAAChD,IAAN,KAAe,KAAf,IAAwBgD,KAAK,CAACO,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIV,OAAJ,EAAa;AACXrD,QAAAA,OAAO,CAAC1L,KAAR;AAEA6N,QAAAA,IAAI,CAACmB,MAAL,CAAYtM,OAAZ,CAAoB,UAAUuM,KAAV,EAAiB;AACnCS,UAAAA,QAAQ,CAACL,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAb,QAAAA,cAAc,CAAC1L,OAAf,CAAuB,UAAUiN,CAAV,EAAa;AAClCC,UAAAA,YAAY,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO;AACLE,QAAAA,MAAM,CAACpB,QAAP,CAAgBqB,MAAhB;AACD;AACF;;AAED,QAAIjC,IAAI,CAAC5B,IAAL,KAAc,QAAlB,EAA4B;AAC1B0C,MAAAA,EAAE,CAACoB,KAAH;;AACApB,MAAAA,EAAE,CAACqB,OAAH,GAAa,YAAY;AACvBvB,QAAAA,QAAQ,CAACqB,MAAT;AACD,OAFD;AAGD;;AAED,QAAIjC,IAAI,CAAC5B,IAAL,KAAc,gBAAlB,EAAoC;AAClCP,MAAAA,OAAO,CAACuE,GAAR,CAAY,2BAAZ;AAEAC,MAAAA,kBAAkB;AACnB;;AAED,QAAIrC,IAAI,CAAC5B,IAAL,KAAc,OAAlB,EAA2B;AACzBP,MAAAA,OAAO,CAACyE,KAAR,CAAc,kBAAkBtC,IAAI,CAACsC,KAAL,CAAWC,OAA7B,GAAuC,IAAvC,GAA8CvC,IAAI,CAACsC,KAAL,CAAWE,KAAvE;AAEAH,MAAAA,kBAAkB;AAElB,UAAII,OAAO,GAAGC,kBAAkB,CAAC1C,IAAD,CAAhC;AACA2C,MAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BJ,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASJ,kBAAT,GAA8B;AAC5B,MAAII,OAAO,GAAGE,QAAQ,CAACG,cAAT,CAAwBrD,UAAxB,CAAd;;AACA,MAAIgD,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACM,MAAR;AACD;AACF;;AAED,SAASL,kBAAT,CAA4B1C,IAA5B,EAAkC;AAChC,MAAIyC,OAAO,GAAGE,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACAP,EAAAA,OAAO,CAACpQ,EAAR,GAAaoN,UAAb,CAFgC,CAIhC;;AACA,MAAI8C,OAAO,GAAGI,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIC,UAAU,GAAGN,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAjB;AACAT,EAAAA,OAAO,CAACW,SAAR,GAAoBlD,IAAI,CAACsC,KAAL,CAAWC,OAA/B;AACAU,EAAAA,UAAU,CAACC,SAAX,GAAuBlD,IAAI,CAACsC,KAAL,CAAWE,KAAlC;AAEAC,EAAAA,OAAO,CAACU,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EZ,OAAO,CAACY,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYF,UAAU,CAACE,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOV,OAAP;AAED;;AAED,SAASW,UAAT,CAAoBxD,MAApB,EAA4BvN,EAA5B,EAAgC;AAC9B,MAAIgR,OAAO,GAAGzD,MAAM,CAACyD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,GAAV;;AAEA,OAAKF,CAAL,IAAUF,OAAV,EAAmB;AACjB,SAAKG,CAAL,IAAUH,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvBE,MAAAA,GAAG,GAAGJ,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,EAAcC,CAAd,CAAN;;AACA,UAAIC,GAAG,KAAKpR,EAAR,IAAekI,KAAK,CAACsE,OAAN,CAAc4E,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAACxQ,MAAJ,GAAa,CAAd,CAAH,KAAwBZ,EAAjE,EAAsE;AACpEiR,QAAAA,OAAO,CAACnQ,IAAR,CAAaoQ,CAAb;AACD;AACF;AACF;;AAED,MAAI3D,MAAM,CAACY,MAAX,EAAmB;AACjB8C,IAAAA,OAAO,GAAGA,OAAO,CAACI,MAAR,CAAeN,UAAU,CAACxD,MAAM,CAACY,MAAR,EAAgBnO,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAOiR,OAAP;AACD;;AAED,SAASzB,QAAT,CAAkBjC,MAAlB,EAA0BwB,KAA1B,EAAiC;AAC/B,MAAIiC,OAAO,GAAGzD,MAAM,CAACyD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAACjC,KAAK,CAAC/O,EAAP,CAAP,IAAqB,CAACuN,MAAM,CAACY,MAAjC,EAAyC;AACvC,QAAIrI,EAAE,GAAG,IAAIwL,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6CvC,KAAK,CAACO,SAAN,CAAgBC,EAA7D,CAAT;AACAR,IAAAA,KAAK,CAACC,KAAN,GAAc,CAACgC,OAAO,CAACjC,KAAK,CAAC/O,EAAP,CAAtB;AACAgR,IAAAA,OAAO,CAACjC,KAAK,CAAC/O,EAAP,CAAP,GAAoB,CAAC8F,EAAD,EAAKiJ,KAAK,CAACwC,IAAX,CAApB;AACD,GAJD,MAIO,IAAIhE,MAAM,CAACY,MAAX,EAAmB;AACxBqB,IAAAA,QAAQ,CAACjC,MAAM,CAACY,MAAR,EAAgBY,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwB3B,MAAxB,EAAgCvN,EAAhC,EAAoC;AAClC,MAAIgR,OAAO,GAAGzD,MAAM,CAACyD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAAChR,EAAD,CAAR,IAAgBuN,MAAM,CAACY,MAA3B,EAAmC;AACjC,WAAOe,cAAc,CAAC3B,MAAM,CAACY,MAAR,EAAgBnO,EAAhB,CAArB;AACD;;AAED,MAAIiO,aAAa,CAACjO,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDiO,EAAAA,aAAa,CAACjO,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAIwR,MAAM,GAAGjE,MAAM,CAACkE,KAAP,CAAazR,EAAb,CAAb;AAEAkO,EAAAA,cAAc,CAACpN,IAAf,CAAoB,CAACyM,MAAD,EAASvN,EAAT,CAApB;;AAEA,MAAIwR,MAAM,IAAIA,MAAM,CAAC9D,GAAjB,IAAwB8D,MAAM,CAAC9D,GAAP,CAAWG,gBAAX,CAA4BjN,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAOmQ,UAAU,CAAC5B,MAAM,CAACC,aAAR,EAAuBpP,EAAvB,CAAV,CAAqCiG,IAArC,CAA0C,UAAUjG,EAAV,EAAc;AAC7D,WAAOkP,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBpP,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAAS0P,YAAT,CAAsBnC,MAAtB,EAA8BvN,EAA9B,EAAkC;AAChC,MAAIwR,MAAM,GAAGjE,MAAM,CAACkE,KAAP,CAAazR,EAAb,CAAb;AACAuN,EAAAA,MAAM,CAACK,OAAP,GAAiB,EAAjB;;AACA,MAAI4D,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAAC9D,GAAP,CAAWC,IAAX,GAAkBJ,MAAM,CAACK,OAAzB;AACD;;AAED,MAAI4D,MAAM,IAAIA,MAAM,CAAC9D,GAAjB,IAAwB8D,MAAM,CAAC9D,GAAP,CAAWI,iBAAX,CAA6BlN,MAAzD,EAAiE;AAC/D4Q,IAAAA,MAAM,CAAC9D,GAAP,CAAWI,iBAAX,CAA6BtL,OAA7B,CAAqC,UAAU6D,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAACkH,MAAM,CAACK,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAOL,MAAM,CAACkE,KAAP,CAAazR,EAAb,CAAP;AACAuN,EAAAA,MAAM,CAACvN,EAAD,CAAN;AAEAwR,EAAAA,MAAM,GAAGjE,MAAM,CAACkE,KAAP,CAAazR,EAAb,CAAT;;AACA,MAAIwR,MAAM,IAAIA,MAAM,CAAC9D,GAAjB,IAAwB8D,MAAM,CAAC9D,GAAP,CAAWG,gBAAX,CAA4BjN,MAAxD,EAAgE;AAC9D4Q,IAAAA,MAAM,CAAC9D,GAAP,CAAWG,gBAAX,CAA4BrL,OAA5B,CAAoC,UAAU6D,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"index-haunted.7afe14f1.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// tslint:disable-next-line:no-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node',\n  index: number\n}|{readonly type: 'attribute', index: number, readonly name: string, readonly strings: ReadonlyArray<string>};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: ReadonlyArray<unknown>) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: ReadonlyArray<unknown>;\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: ReadonlyArray<unknown>,\n      type: string, processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment poisition.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceeding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceeding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? marker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|Symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // tslint:disable-next-line:no-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = value as string;\n    } else {\n      this.__commitNode(document.createTextNode(\n          typeof value === 'string' ? value : String(value)));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // tslint:disable-next-line:no-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  // tslint:disable-next-line:no-any\n  window.addEventListener('test', options as any, options);\n  // tslint:disable-next-line:no-any\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behaviour, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport type templateCache = {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>; //\n  readonly keyString: Map<string, Template>;\n};\n\nexport const templateCaches = new Map<string, templateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\nimport {TemplateResult} from './template-result.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: TemplateResult,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.0.0');\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","import { render, directive } from 'lit-html';\nexport { html, render } from 'lit-html';\n\nconst symbolFor = typeof Symbol === 'function' ? Symbol.for : str => str;\n\nconst phaseSymbol = symbolFor('haunted.phase');\nconst hookSymbol = symbolFor('haunted.hook');\n\nconst updateSymbol = symbolFor('haunted.update');\nconst commitSymbol = symbolFor('haunted.commit');\nconst effectsSymbol = symbolFor('haunted.effects');\nconst contextSymbol = symbolFor('haunted.context');\n\nconst contextEvent = 'haunted.context';\n\nlet current;\nlet currentId = 0;\n\nfunction setCurrent(element) {\n  current = element;\n}\n\nfunction clear() {\n  current = null;\n  currentId = 0;\n}\n\nfunction notify() {\n  let id = currentId;\n  currentId++;\n  return id;\n}\n\nconst defer = Promise.resolve().then.bind(Promise.resolve());\n\nfunction scheduler() {\n  let tasks = [];\n  let id;\n\n  function runTasks() {\n    id = null;\n    let t = tasks;\n    tasks = [];\n    for(var i = 0, len = t.length; i < len; i++) {\n      t[i]();\n    }\n  }\n\n  return function(task) {\n    tasks.push(task);\n    if(id == null) {\n      id = defer(runTasks);\n    }\n  };\n}\n\nconst read = scheduler();\nconst write = scheduler();\n\nclass Container {\n  constructor(renderer, frag, host) {\n    this.renderer = renderer;\n    this.frag = frag;\n    this.host = host || frag;\n    this[hookSymbol] = new Map();\n    this[phaseSymbol] = null;\n    this._updateQueued = false;\n  }\n\n  update() {\n    if(this._updateQueued) return;\n    read(() => {\n      let result = this.handlePhase(updateSymbol);\n      write(() => {\n        this.handlePhase(commitSymbol, result);\n\n        if(this[effectsSymbol]) {\n          write(() => {\n            this.handlePhase(effectsSymbol);\n          });\n        }\n      });\n      this._updateQueued = false;\n    });\n    this._updateQueued = true;\n  }\n\n  handlePhase(phase, arg) {\n    this[phaseSymbol] = phase;\n    switch(phase) {\n      case commitSymbol: return this.commit(arg);\n      case updateSymbol: return this.render();\n      case effectsSymbol: return this.runEffects(effectsSymbol);\n    }\n    this[phaseSymbol] = null;\n  }\n\n  commit(result) {\n    render(result, this.frag);\n    this.runEffects(commitSymbol);\n  }\n\n  render() {\n    setCurrent(this);\n    let result = this.args ?\n      this.renderer.apply(this.host, this.args) :\n      this.renderer.call(this.host, this.host);\n    clear();\n    return result;\n  }\n\n  runEffects(symbol) {\n    let effects = this[symbol];\n    if(effects) {\n      setCurrent(this);\n      for(let effect of effects) {\n        effect.call(this);\n      }\n      clear();\n    }\n  }\n\n  teardown() {\n    let hooks = this[hookSymbol];\n    hooks.forEach((hook) => {\n      if (typeof hook.teardown === 'function') {\n        hook.teardown();\n      }\n    });\n  }\n}\n\nfunction toCamelCase(val = '') {\n  return val.indexOf('-') === -1 ? val.toLowerCase() : val.toLowerCase().split('-').reduce((out, part) => {\n    return out ? out + part.charAt(0).toUpperCase() + part.slice(1) : part;\n  },'') \n}\n\nfunction component(renderer, BaseElement = HTMLElement, {useShadowDOM = true, shadowRootInit = {}} = {}) {\n  class Element extends BaseElement {\n    static get observedAttributes() {\n      return renderer.observedAttributes || [];\n    }\n\n    constructor() {\n      super();\n      if (useShadowDOM === false) {\n        this._container = new Container(renderer, this);\n      } else {\n        this.attachShadow({ mode: \"open\", ...shadowRootInit});\n        this._container = new Container(renderer, this.shadowRoot, this);        \n      }\n    }\n\n    connectedCallback() {\n      this._container.update();\n    }\n\n    disconnectedCallback() {\n      this._container.teardown();\n    }\n\n    attributeChangedCallback(name, _, newValue) {\n      let val = newValue === '' ? true : newValue;\n      Reflect.set(this, toCamelCase(name), val);\n    }\n  }\n  function reflectiveProp(initialValue) {\n    let value = initialValue;\n    return Object.freeze({\n      enumerable: true,\n      configurable: true,\n      get() {\n        return value;\n      },\n      set(newValue) {\n        value = newValue;\n        this._container.update();\n      }\n    })\n  }\n\n  const proto = new Proxy(BaseElement.prototype, {\n    set(target, key, value, receiver) {\n      if(key in target) {\n        Reflect.set(target, key, value);\n      }\n      let desc;\n      if(typeof key === 'symbol' || key[0] === '_') {\n        desc = {\n          enumerable: true,\n          configurable: true,\n          writable: true,\n          value\n        }; \n      } else {\n        desc = reflectiveProp(value);\n      }\n      Object.defineProperty(receiver, key, desc);\n\n      if(desc.set) {\n        desc.set.call(receiver, value);\n      }\n\n      return true;\n    }\n  });\n\n  Object.setPrototypeOf(Element.prototype, proto);\n\n\n  return Element;\n}\n\nclass Hook {\n  constructor(id, el) {\n    this.id = id;\n    this.el = el;\n  }\n}\n\nfunction use(Hook, ...args) {\n  let id = notify();\n  let hooks = current[hookSymbol];\n  \n  let hook = hooks.get(id);\n  if(!hook) {\n    hook = new Hook(id, current, ...args);\n    hooks.set(id, hook);\n  }\n\n  return hook.update(...args);\n}\n\nfunction hook(Hook) {\n  return use.bind(null, Hook);\n}\n\nconst useMemo = hook(class extends Hook {\n  constructor(id, el, fn, values) {\n    super(id, el);\n    this.value = fn();\n    this.values = values;\n  }\n\n  update(fn, values) {\n    if(this.hasChanged(values)) {\n      this.values = values;\n      this.value = fn();\n    }\n    return this.value;\n  }\n\n  hasChanged(values) {\n    return values.some((value, i) => this.values[i] !== value);\n  }\n});\n\nconst useCallback = (fn, inputs) => useMemo(() => fn, inputs);\n\nfunction setEffects(el, cb) {\n  if(!(effectsSymbol in el)) {\n    el[effectsSymbol] = [];\n  }\n  el[effectsSymbol].push(cb);\n}\n\nconst useEffect = hook(class extends Hook {\n  constructor(id, el) {\n    super(id, el);\n    this.values = false;\n    setEffects(el, this);\n  }\n\n  update(callback, values) {\n    this.callback = callback;\n    this.lastValues = this.values;\n    this.values = values;\n  }\n\n  call() {\n    if(this.values) {\n      if(this.hasChanged()) {\n        this.run();\n      }\n    } else {\n      this.run();\n    }\n  }\n\n  run() {\n    this.teardown();\n    this._teardown = this.callback.call(this.el);\n  }\n\n  teardown() {\n    if(this._teardown) {\n      this._teardown();\n    }\n  }\n\n  hasChanged() {\n    return this.lastValues === false || this.values.some((value, i) => this.lastValues[i] !== value);\n  }\n});\n\nconst useState = hook(class extends Hook {\n  constructor(id, el, initialValue) {\n    super(id, el);\n    this.updater = this.updater.bind(this);\n    this.makeArgs(initialValue);\n  }\n\n  update() {\n    return this.args;\n  }\n\n  updater(value) {\n    if (typeof value === \"function\") {\n      const updaterFn = value;\n      const [previousValue] = this.args;\n      value = updaterFn(previousValue);\n    }\n\n    this.makeArgs(value);\n    this.el.update();\n  }\n\n  makeArgs(value) {\n    this.args = Object.freeze([value, this.updater]);\n  }\n});\n\nconst useReducer = hook(class extends Hook {\n  constructor(id, el, _, initialState) {\n    super(id, el);\n    this.dispatch = this.dispatch.bind(this);\n    this.state = initialState;\n  }\n\n  update(reducer) {\n    this.reducer = reducer;\n    return [this.state, this.dispatch];\n  }\n\n  dispatch(action) {\n    this.state = this.reducer(this.state, action);\n    this.el.update();\n  }\n});\n\nconst partToContainer = new WeakMap();\nconst containerToPart = new WeakMap();\n\nclass DirectiveContainer extends Container {\n  constructor(renderer, part) {\n    super(renderer, part);\n    this.virtual = true;\n  }\n\n  commit(result) {\n    this.host.setValue(result);\n    this.host.commit();\n  }\n\n  teardown() {\n    super.teardown();\n    let part = containerToPart.get(this);\n    partToContainer.delete(part);\n  }\n}\n\n\n\nfunction withHooks(renderer) {\n  function factory(...args) {\n    return part => {\n      let cont = partToContainer.get(part);\n      if(!cont) {\n        cont = new DirectiveContainer(renderer, part);\n        partToContainer.set(part, cont);\n        containerToPart.set(cont, part);\n        teardownOnRemove(cont, part);\n      }\n      cont.args = args;\n      cont.update();\n    };\n  }\n\n  return directive(factory);\n}\n\nconst includes = Array.prototype.includes;\n\nfunction teardownOnRemove(cont, part, node = part.startNode) {\n  let frag = node.parentNode;\n  let mo = new MutationObserver(mutations => {\n    for(let mutation of mutations) {\n      if(includes.call(mutation.removedNodes, node)) {\n        mo.disconnect();\n\n        if(node.parentNode instanceof ShadowRoot) {\n          teardownOnRemove(cont, part);\n        } else {\n          cont.teardown();\n        }\n        break;\n      } else if(includes.call(mutation.addedNodes, node.nextSibling)) {\n        mo.disconnect();\n        teardownOnRemove(cont, part, node.nextSibling);\n        break;\n      }\n    }\n  });\n  mo.observe(frag, { childList: true });\n}\n\nfunction setContexts(el, consumer) {\n  if(!(contextSymbol in el)) {\n    el[contextSymbol] = [];\n  }\n  el[contextSymbol].push(consumer);\n}\n\nconst useContext = hook(class extends Hook {\n  constructor(id, el) {\n    super(id, el);\n    setContexts(el, this);\n    this._updater = this._updater.bind(this);\n  }\n\n  update(Context) {\n    if (this.el.virtual) {\n      throw new Error('can\\'t be used with virtual components');\n    }\n\n    if (this.Context !== Context) {\n      this._subscribe(Context);\n      this.Context = Context;\n    }\n\n    return this.value;\n  }\n\n  _updater(value) {\n    this.value = value;\n    this.el.update();\n  }\n\n  _subscribe(Context) {\n    const detail = { Context, callback: this._updater };\n\n    this.el.host.dispatchEvent(new CustomEvent(contextEvent, {\n      detail, // carrier\n      bubbles: true, // to bubble up in tree\n      cancelable: true, // to be able to cancel\n      composed: true, // to pass ShadowDOM boundaries\n    }));\n\n    const { unsubscribe, value } = detail;\n\n    this.value = unsubscribe ? value : Context.defaultValue;\n\n    this._unsubscribe = unsubscribe;\n  }\n\n  teardown() {\n    if (this._unsubscribe) {\n      this._unsubscribe();\n    }\n  }\n});\n\nconst createContext = (defaultValue) => {\n  const Context = {};\n  \n  Context.Provider = class extends HTMLElement {\n    constructor() {\n      super();\n      this.listeners = [];\n  \n      this.eventHandler = (event) => {\n        const { detail } = event;\n      \n        if (detail.Context === Context) {\n          detail.value = this.value;\n      \n          detail.unsubscribe = () => {\n            const index = this.listeners.indexOf(detail.callback);\n\n            if (index > -1) {\n              this.listeners.splice(index, 1);\n            }\n          };\n\n          this.listeners.push(detail.callback);\n  \n          event.stopPropagation();\n        }\n      };\n  \n      this.addEventListener(contextEvent, this.eventHandler);\n    }\n  \n    disconnectedCallback() {\n      this.removeEventListener(contextEvent, this.eventHandler);\n    }\n\n    set value(value) {\n      this._value = value;\n      this.listeners.forEach(callback => callback(value));\n    }\n\n    get value() {\n      return this._value;\n    }\n  };\n\n  Context.Consumer = component(function ({ render: render$$1 }) {\n    const context = useContext(Context);\n\n    return render$$1(context);\n  });\n\n  Context.defaultValue = defaultValue;\n\n  return Context;\n};\n\nexport { component, useCallback, useEffect, useState, useReducer, useMemo, withHooks, withHooks as virtual, useContext, createContext, hook, Hook };\n","//import { useState, useEffect } from 'swiss/hooks';\nimport { useState, useEffect } from 'haunted';\n//import { useState, useEffect } from 'neverland';\n\nlet stores = {};\nlet subscriptions = {};\n\nconst defaultReducer = (state, payload) => payload;\n\nclass StoreInterface {\n  constructor(name, store, useReducer) {\n    this.name = name;\n    useReducer ?\n      this.dispatch = store.setState : this.setState = store.setState;\n    this.getState = () => store.state;\n    this.subscribe = subscribe;\n    this.unsubscribe = unsubscribe;\n  }\n\n  setState() {\n    console.warn(`[React Hookstore] Store ${this.name} uses a reducer to handle its state updates. use dispatch instead of setState`)\n  }\n\n  dispatch() {\n    console.warn(`[React Hookstore] Store ${this.name} does not use a reducer to handle state updates. use setState instead of dispatch`)\n  }\n}\n\nfunction getStoreByIdentifier(identifier) {\n  const name = identifier instanceof StoreInterface ? identifier.name : identifier;\n  return stores[name];\n}\n\n/**\n * Creates a new store\n * @param {String} name - The store namespace.\n * @param {*} state [{}] - The store initial state. It can be of any type.\n * @callback reducer [null]\n * @returns {StoreInterface} The store instance.\n */\n\n/**\n *\n * @param {reducer} prevState, action - The reducer handler. Optional.\n */\nexport function createStore(name, state = {}, reducer=defaultReducer) {\n  if (typeof name !== 'string') {\n    throw 'store name must be a string';\n  }\n  if (stores[name]) {\n    throw 'store already exists'\n  }\n\n  const store = {\n    state,\n    reducer,\n    setState(action, callback) {\n      this.state = this.reducer(this.state, action);\n      this.setters.forEach(setter => setter(this.state));\n      if (typeof callback === 'function') callback(this.state)\n      if (action && action.type &&\n        subscriptions[action.type]) {\n        subscriptions[action.type]\n          .forEach(subscription => subscription.name === name &&\n            subscription.callback(action, this.state));\n      }\n    },\n    setters: []\n  };\n  store.setState = store.setState.bind(store);\n  store.public = new StoreInterface(name, store, reducer !== defaultReducer);\n\n  stores = Object.assign({}, stores, { [name]: store });\n  return store.public;\n}\n\n/**\n * Returns a store instance based on its name\n * @param {String} name - The name of the wanted store\n * @returns {StoreInterface} the store instance\n */\nexport function getStoreByName(name) {\n  try {\n    return stores[name].public;\n  } catch(e) {\n    throw 'store does not exist';\n  }\n}\n\n/**\n * Returns a [ state, setState ] pair for the selected store. Can only be called within React Components\n * @param {String|StoreInterface} identifier - The identifier for the wanted store\n * @returns {Array} the [state, setState] pair.\n */\nexport function useStore(identifier) {\n  const store = getStoreByIdentifier(identifier);\n  if (!store) {\n    throw 'store does not exist';\n  }\n\n  const [ state, set ] = useState(store.state);\n\n  useEffect(() => () => {\n    store.setters = store.setters.filter(setter => setter !== set)\n  }, [])\n\n  if (!store.setters.includes(set)) {\n    store.setters.push(set);\n  }\n\n  return [ state, store.setState ];\n}\n\nfunction subscribe(actions, callback) {\n  if (!actions || !Array.isArray(actions))\n    throw 'first argument must be an array';\n  if (!callback || typeof callback !== 'function')\n    throw 'second argument must be a function';\n  if(subsriberExists(this.name))\n    throw 'you are already subscribing to this store. unsubscribe to configure a new subscription.';\n  actions.forEach(action => {\n    if(!subscriptions[action]) {\n      subscriptions[action] = [];\n    }\n    subscriptions[action].push({callback, name:this.name});\n  });\n}\n\nfunction unsubscribe() {\n  const keys = Object.keys(subscriptions);\n  keys\n    .forEach(key => {\n      if(subscriptions[key].length === 1) {\n        delete subscriptions[key];\n      } else {\n        subscriptions[key] = subscriptions[key]\n          .filter((action, i) =>  action.name !== this.name);\n      }\n    });\n};\n\nfunction subsriberExists(name) {\n  const keys = Object.keys(subscriptions);\n  return keys.find(key => subscriptions[key]\n    .find(action => action && action.name === name)\n  );\n}\n","const reducer = (state, action) => {\n  const {type} = action;\n  switch (type) {\n    case 'change':\n      state.name = 'devsChile';\n      return state;\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import {html, component} from 'haunted';\nimport { createStore, useStore } from './storeHook';\nimport reducer from './reducer';\n\n\nconst appState = {name: 'amigos'};\nconst todoListStore = createStore(\n  'todoList',\n  appState,\n  reducer\n);\n\nconst elementOne = () => {\n  const [state] = useStore(todoListStore);\n  return html`\n     <div>Hola: ${state.name}</div>\n   `;\n};\n\n\nconst elementTwo = () => {\n  const [state, dispatch] = useStore(todoListStore);\n  return html`\n     <div>aca tambien deberiamos saludar, Hola: ${state.name}</div>\n     <button @click=${() => dispatch({type:'change'})}>cambiar</button>\n   `;\n};\n\ncustomElements.define('h-one', component(elementOne));\ncustomElements.define('h-two', component(elementTwo));\n\nconst App =() => {\n  return html`\n    <h-one></h-one>\n    <h-two></h-two>\n  `;\n};\n\ncustomElements.define(\"my-haunted-app\", component(App));\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}